[{"Description":"","Title":"Morning Tea","Event":10,"Start":"2012-01-16 10:00:00","Duration":"0:30:00","Id":5,"Room Name":"Cafeteria"},{"Description":"","Title":"Morning Tea","Event":10,"Start":"2012-01-17 10:00:00","Duration":"0:30:00","Id":6,"Room Name":"Cafeteria"},{"Description":"","Title":"Registration","Event":16,"Start":"2012-01-16 08:30:00","Duration":"1:00:00","Id":7,"Room Name":"Caro"},{"Description":"","Title":"Keynote - Bruce Perens","Event":12,"Start":"2012-01-17 09:00:00","Duration":"1:00:00","Id":10,"Room Name":"Caro"},{"Description":"","Title":"Arduino Miniconf by Jon Oxer and Andy Gelme","Event":4,"Start":"2012-01-16 10:30:00","Duration":"1:50:00","Id":11,"Room Name":"Studio"},{"Description":"","Title":"Haecksen by Lana Brindley","Event":1,"Start":"2012-01-16 10:30:00","Duration":"1:50:00","Id":12,"Room Name":"Studio 2"},{"Description":"","Title":"High Availability and Distributed Storage by Tim Serong","Event":2,"Start":"2012-01-16 10:30:00","Duration":"1:50:00","Id":13,"Room Name":"C001"},{"Description":"","Title":"Business of Open Source Miniconf by Martin Michlmayr","Event":7,"Start":"2012-01-16 10:30:00","Duration":"1:50:00","Id":14,"Room Name":"T102"},{"Description":"","Title":"Browser Miniconf by Shane Stephens and Cameron McCormack","Event":9,"Start":"2012-01-16 10:30:00","Duration":"1:50:00","Id":16,"Room Name":"Studio 3"},{"Description":"","Title":"Afternoon Tea","Event":11,"Start":"2012-01-17 15:10:00","Duration":"0:30:00","Id":18,"Room Name":"Cafeteria"},{"Description":"","Title":"Lunch","Event":18,"Start":"2012-01-17 12:20:00","Duration":"1:00:00","Id":19,"Room Name":"Cafeteria"},{"Description":"","Title":"Multimedia and Music Miniconf by Jonathan Woithe","Event":3,"Start":"2012-01-16 10:30:00","Duration":"1:50:00","Id":20,"Room Name":"Studio 1"},{"Description":"","Title":"Open Programming Miniconf by Christopher Neugebauer","Event":5,"Start":"2012-01-16 10:30:00","Duration":"1:50:00","Id":21,"Room Name":"T101"},{"Description":"","Title":"Keynote - Paul Fenwick","Event":13,"Start":"2012-01-18 09:00:00","Duration":"1:00:00","Id":24,"Room Name":"Caro"},{"Description":"","Title":"Keynote - Karen Sandler","Event":14,"Start":"2012-01-19 09:00:00","Duration":"1:00:00","Id":25,"Room Name":"Caro"},{"Description":"","Title":"Keynote - Jacob Appelbaum","Event":15,"Start":"2012-01-20 09:00:00","Duration":"1:00:00","Id":26,"Room Name":"Caro"},{"Description":"","Title":"Morning Tea","Event":10,"Start":"2012-01-20 10:00:00","Duration":"0:30:00","Id":27,"Room Name":"Cafeteria"},{"Description":"","Title":"Lunch","Event":18,"Start":"2012-01-20 12:20:00","Duration":"1:00:00","Id":28,"Room Name":"Cafeteria"},{"Description":"","Title":"Afternoon Tea","Event":11,"Start":"2012-01-20 15:10:00","Duration":"0:30:00","Id":29,"Room Name":"Cafeteria"},{"Description":"","Title":"Afternoon Tea","Event":11,"Start":"2012-01-19 15:10:00","Duration":"0:30:00","Id":30,"Room Name":"Cafeteria"},{"Description":"","Title":"Lunch","Event":18,"Start":"2012-01-19 12:20:00","Duration":"1:00:00","Id":31,"Room Name":"Cafeteria"},{"Description":"","Title":"Morning Tea","Event":10,"Start":"2012-01-19 10:00:00","Duration":"0:30:00","Id":32,"Room Name":"Cafeteria"},{"Description":"A life-long love of hardware and software has grown a series of increasingly curious experiments in the intersection of virtual life with real life, bringing the desktop experience into the home. Inspired by a friend's X10-wired house in the 1990's, this talk is a modern take on the \"smart home\", employing technologies like Arduino, PandaBoard, WiFi, a handful or so of multi-colored LEDs, 3D depth sensors and Natural Interaction, RFID, DBus, Javascript, text-to-speech, and more. If possible, I'll bring along some demo projects, such as a mood-egg IRC traffic monitor.","Title":"Desktop Home Hacks","URL":"http://lca2012.linux.org.au/schedule/210/view_talk","Event":20,"Start":"2012-01-19 10:30:00","Presenter_emails":"allison@lohutok.net","Presenters":"Allison Randal","Duration":"0:50:00","Id":33,"Room Name":"C001"},{"Description":"In economic and game theory, a \"zero-sum game\" describes a scenario\r\nwhere success for one individual or entity only comes by failure of\r\nanother. In FLOSS culture, we strongly value the idea that collaboration and cooperation is a fundamentally superior model for innovation, development, and business. And yet, paradoxically, you'll often see the implicit or explicit assumption that there can be only one \"best\" text editor, or programming language, or Linux distribution and all others must suffer by comparison. This talk explores why free software is the future of technology, competition vs growth, the hazards of silos, and the green fields beyond feature parity with proprietary software.","Title":"The Fallacy of the Zero-Sum Game","URL":"http://lca2012.linux.org.au/schedule/209/view_talk","Event":19,"Start":"2012-01-20 10:30:00","Presenter_emails":"allison@lohutok.net","Presenters":"Allison Randal","Duration":"0:50:00","Id":34,"Room Name":"Studio"},{"Description":"This presentation is a status update on the development of \"FreedomBox\", which is a project supported by the FreedomBox Foundation founded by Eben Moglen.\r\n\r\nFreedomBox is a personal server running a free software operating system and free applications, designed to create and preserve personal privacy by providing a secure platform upon which federated social networks can be constructed.  \r\n\r\nThe software for FreedomBox is being assembled by volunteer programmers around the world who believe in Free Software and Free Society, with Bdale coordinating development of a reference implementation on behalf of the foundation.","Title":"Freedom, Out of the Box!","URL":"http://lca2012.linux.org.au/schedule/36/view_talk","Event":21,"Start":"2012-01-18 16:40:00","Presenter_emails":"bdale@gag.com","Presenters":"Bdale Garbee","Duration":"0:50:00","Id":35,"Room Name":"Caro"},{"Description":"Btrfs (\"Butter FS\") is a new copy on write filesystem for Linux aimed at implementing advanced features while focusing on fault tolerance, repair and easy administration. Initially developed by Oracle, Btrfs is licensed under the GPL and open for contribution from anyone.\r\n\r\nThis tutorial will take users through some of the new features of the btrfs file system, including:\r\n\r\n- Creating/mounting the filesystem\r\n- Setting up mirroring/striping\r\n- Adding/removing devices\r\n- Rebalancing data\r\n- Growing/shrinking volumes\r\n- Creating snapshots/subvolumes\r\n- Booting from snapshots\r\n\r\nOn completion, attendees should be confident about using btrfs in their own environments and taking advantage of some of the new features.","Title":"I Can't Believe This is Butter! A tour of btrfs.","URL":"http://lca2012.linux.org.au/schedule/38/view_talk","Event":22,"Start":"2012-01-18 10:30:00","Presenter_emails":"avi.miller@gmail.com","Presenters":"Avi Miller","Duration":"0:50:00","Id":36,"Room Name":"C001"},{"Description":"In September 2012 the CanberraUAV team will try to rescue 'Outback Joe' as part of the UAV outback challenge. This talk is all about the technology and techniques that we have developed for building an Unmanned Aerial Vehicle (UAV) that can search for and find a lost bushwalker in outback Australia.\r\n\r\nFrom the Linux based in-plane computer systems, to the Arduino based autopilots, the python ground control station and the machine vision cameras, our team has tried to bring a new degree of open development to the UAV scene. Trying to make it all reliable while flying long distances in a 3m wingspan plane has been an interesting challenge!\r\n\r\n","Title":"Rescuing Joe","URL":"http://lca2012.linux.org.au/schedule/58/view_talk","Event":23,"Start":"2012-01-20 11:30:00","Presenter_emails":"tridge@samba.org","Presenters":"Andrew Tridgell","Duration":"0:50:00","Id":37,"Room Name":"Caro"},{"Description":"The topic for my proposed presentation is the Ganeti project.  \"Ganeti\" is an open source management system for managing virtual machines.  It originally started as a Google internal project, but has grown to be used and developed by several groups outside of Google, including major community hosting at the OSU Open Source Lab.  Ganeti allows the use of several different hypervisors such as Xen and KVM, and allows live migration and automatic replication.  The presentation would go over the overall schema of a cluster, installation, administration, intelligent self-balancing, and cost savings.\r\n\r\nComparisons will be given against the closest proprietary solution - VMWare ESX.  Certain topics such as cost savings, manageability, migration, differences in schema, and a general feature comparison are given.  If the audience is interested I have an optional subsection involving automating deployment of clusters using PXELinux, Kickstart, and Puppet.\r\n\r\nA live demonstration on a live cluster will be shown, prodded, and failures induced to demonstrate features such as quick and easy VM creation, batch VM creation, disaster recovery, quick prototyping, live VM and host networking alterations, and secured remote access via VNC and a virtual serial interface.  Attention will be given to installing Linux and *gasp* the ability to install and have first-class Windows instances.\r\n\r\nIf time permits, other related topics such as monitoring, advanced diagnostics and debugging, tuning, and the Ganeti-webmgr (http://code.osuosl.org/projects/ganeti-webmgr) project can be covered.","Title":"Ganeti: Clustered Virtualization on Commodity Hardware","URL":"http://lca2012.linux.org.au/schedule/101/view_talk","Event":24,"Start":"2012-01-19 15:40:00","Presenter_emails":"bkero@mozilla.com","Presenters":"Ben Kero","Duration":"0:50:00","Id":38,"Room Name":"Studio"},{"Description":"Andrew Bartlett and Amitay Isaacs\r\n\r\nThis talk will examine the history of the Samba project over the past\r\n20 years, from the perspective of the scripting languages that have\r\nbeen our accomplices in our crimes against network protocols.  From\r\nAWK and perl to JavaScript, M4 and eventually python, the Samba Team's\r\nfacade of 'A C project' has always been a bit of a fraud, truly aimed\r\nat ensuring we never used C++.\r\n\r\nOf late, the Samba Team has embraced python as the scripting language\r\nof choice, a move that was originally made under false pretenses.  \r\n\r\nAs Samba matures to Samba 4.0, we have seen python as a key way to\r\nengage new contributors and embrace a more flexible programming\r\nparadigm.  Samba is now a mature python/C project, with a python based\r\nbuild system, and python bindings (many auto-generated with perl!) for\r\nmany of our internal libraries.\r\n\r\nThis talk will examine the journey and highlight the challenges and\r\nmilestones as we celebrate 20 years of Samba, no longer (and never \r\nreally) a pure C project.  \r\n","Title":"The Samba tour of scripting languages","URL":"http://lca2012.linux.org.au/schedule/157/view_talk","Event":25,"Start":"2012-01-18 15:40:00","Presenter_emails":"abartlet@samba.org,amitay@gmail.com","Presenters":"Andrew Bartlett,Amitay Isaacs","Duration":"0:50:00","Id":39,"Room Name":"Caro"},{"Description":"This presentation will examine the recent changes in Australian Copyright law coming from the recent court decisions in the AFACT v iiNet cases. The presentation will draw on some of the ideas that I have written about in the following posts: http://czaxxover140.blogspot.com/2011/03/harbour-is-not-as-safe-as-it-looks.html and http://czaxxover140.blogspot.com/2011/03/afact-appeals-against-reason.html and will also examine the High Court case (which should be concluded by the time LCA is on). I will also provide some analysis of several of the proposed solutions in the AFACT case and what their potential impact could be on end users\r\n\r\nI will also look at other movements in copyright law (such as the TPPA and ACTA), examine the impacts on content distribution models and put some context on some of the politics surrounding the changes to copyright laws in Australia, NZ, the US and UK.\r\n","Title":"The copyright safe harbour is no longer safe","URL":"http://lca2012.linux.org.au/schedule/206/view_talk","Event":26,"Start":"2012-01-19 13:20:00","Presenter_emails":"powell.bm@gmail.com","Presenters":"Ben Powell","Duration":"0:50:00","Id":40,"Room Name":"Studio"},{"Description":"Linux and open source technology should be a good news story for everyone. However, the way these topics are presented in the media often leaves enthusiasts unhappy. There is a widespread belief that open source alternatives are neglected in favour of commercial products; that coverage often distorts the facts and exaggerates conflict rather than offering insight; and that the right-wing bias of much Australian media dooms the open source community to being dismissed as a kook minority led by some cult figure from Scandinavia whose name no-one can pronounce. The reality is more complex, as reality usually is.\r\n\r\nDrawing on my own personal experience over nearly two decades covering the technology scene in Australia and internationally, I want to examine some key issues in this area:\r\n* Is there an evident bias against covering open source by technology media and general media?\r\n* Do editors avoid open source topics because of commercial pressure from advertisers?\r\n* Why did I once ask Linus Torvalds if he was available as a hired guest for parties?\r\n* How does the decentralised and collaborative nature of open source make life more difficult for journalists?\r\n* How has Apple displaced Linux as a go-to topic when online publications are keen for traffic?\r\n* Does it matter if the Daily Telegraph gets everything about Linux wrong when we have the entire Internet at our disposal?\r\n* What can open source developers and enthusiasts do to ensure that their projects get covered accurately and fairly by the media?\r\n","Title":"Cheap tabloid tricks: The truth about Linux, open source and the media","URL":"http://lca2012.linux.org.au/schedule/100/view_talk","Event":27,"Start":"2012-01-19 11:30:00","Presenter_emails":"angus@gusworld.com.au","Presenters":"Angus Kidman","Duration":"0:50:00","Id":41,"Room Name":"Studio"},{"Description":"","Title":"Nothing Scheduled","Event":102,"Start":"2012-01-18 11:30:00","Duration":"0:50:00","Id":42,"Room Name":"T101"},{"Description":"Btrfs (\"Butter FS\") is a new copy on write filesystem for Linux aimed at implementing advanced features while focusing on fault tolerance, repair and easy administration. Initially developed by Oracle, Btrfs is licensed under the GPL and open for contribution from anyone.\r\n\r\nThis tutorial will take users through some of the new features of the btrfs file system, including:\r\n\r\n- Creating/mounting the filesystem\r\n- Setting up mirroring/striping\r\n- Adding/removing devices\r\n- Rebalancing data\r\n- Growing/shrinking volumes\r\n- Creating snapshots/subvolumes\r\n- Booting from snapshots\r\n\r\nOn completion, attendees should be confident about using btrfs in their own environments and taking advantage of some of the new features.","Title":"I Can't Believe This is Butter! A tour of btrfs.","URL":"http://lca2012.linux.org.au/schedule/38/view_talk","Event":22,"Start":"2012-01-20 13:20:00","Presenter_emails":"avi.miller@gmail.com","Presenters":"Avi Miller","Duration":"0:50:00","Id":43,"Room Name":"Caro"},{"Description":"Codec2 is an open source low bit rate speech codec designed for communications quality speech at around 2400 bit/s. Applications include low bandwidth HF/VHF digital radio and VOIP trunking. Codec 2 operating at 2000 bit/s can send 32 phone calls using the bandwidth required for one 64 kbit/s uncompressed phone call. It fills a gap in open source, free-as-in-speech voice codecs beneath 5000 bit/s and is released under the GNU Lesser General Public License (LGPL).\r\n\r\nSpeex and the other open video and audio codecs have proven it’s possible to create a patent free, high quality codec. There is an important social theme behind these technical projects. A free codec helps a large amount of people and promotes development and innovation. A closed codec helps a small number people make money at the expense of stifled business and technical development for the majority.\r\n\r\nOne important part of Codec 2 is the use of open source and community development techniques. The net result was access to a world wide \"brains trust\" and network of beta testers that has resulted in swift development of effective DSP algorithms.\r\n\r\nThis presentation will explain the advanced DSP techniques used in Codec 2 in terms the average Linux user can understand, plus give examples of end user applications.","Title":"Codec 2 - Open Source Speech Coding at 2400 bit/s and Below","URL":"http://lca2012.linux.org.au/schedule/59/view_talk","Event":40,"Start":"2012-01-20 13:20:00","Presenter_emails":"david@rowetel.com","Presenters":"David Rowe","Duration":"0:50:00","Id":44,"Room Name":"C001"},{"Description":"This presentation is a status update on the development of \"FreedomBox\", which is a project supported by the FreedomBox Foundation founded by Eben Moglen.\r\n\r\nFreedomBox is a personal server running a free software operating system and free applications, designed to create and preserve personal privacy by providing a secure platform upon which federated social networks can be constructed.  \r\n\r\nThe software for FreedomBox is being assembled by volunteer programmers around the world who believe in Free Software and Free Society, with Bdale coordinating development of a reference implementation on behalf of the foundation.","Title":"Freedom, Out of the Box!","URL":"http://lca2012.linux.org.au/schedule/36/view_talk","Event":21,"Start":"2012-01-20 14:20:00","Presenter_emails":"bdale@gag.com","Presenters":"Bdale Garbee","Duration":"0:50:00","Id":45,"Room Name":"Caro"},{"Description":"The PC BIOS is a dreadful thing. Poorly standardised and often poorly implemented, it has one job to do and frequently does it badly. The kernel and bootloaders are obliged to devote extensive sections of code to working around issues present in the BIOS, code and time that could have been better spent elsewhere.\r\n\r\nEveryone agrees that the PC BIOS is awful. So why, when Intel introduced the Extensible Firmware Interface (EFI) as a replacement for it, did we not great it with open arms?\r\n\r\nThis presentation will introduce EFI to the audience, covering the reasons for its existence and its benefits. It will then go on to discuss everything that's wrong with it, from poorly considered aspects of the specification to implementation flaws.\r\n\r\nShould it be necessary, audience members are advised to provide their own gin.","Title":"EFI and Linux: the future is here, and it's awful","URL":"http://lca2012.linux.org.au/schedule/63/view_talk","Event":49,"Start":"2012-01-20 14:20:00","Presenter_emails":"mjg59-lca2012@srcf.ucam.org","Presenters":"Matthew Garrett","Duration":"0:50:00","Id":46,"Room Name":"C001"},{"Description":"Can a bunch of free software folks abolish software patents?\r\n\r\nIn June 2010, Irish free software advocate Ciaran O'Riordan wrote an article rightfully berating Australia for missing the 2009 government consultation on patents. Bouyed by New Zealand's recent progress, we decided it was time to get started. A few weeks, a Slashdotting and over 1000 supporters later, we were excited to see that we weren't the only ones worried about this issue.\r\n\r\nIn this presentation, you'll hear:\r\n - a refresher of what software patents are and why they're harmful\r\n - highlights of the campaign so far\r\n - how to help us abolish software patents","Title":"Ending Software Patents in Australia","URL":"http://lca2012.linux.org.au/schedule/120/view_talk","Event":33,"Start":"2012-01-19 14:20:00","Presenter_emails":"ben@sturm.com.au","Presenters":"Ben Sturmfels","Duration":"0:50:00","Id":47,"Room Name":"Studio"},{"Description":"Erlang is gaining popularity as a language for developing robust, maintainable, concurrent systems for high load environments. Its list of features, including hot code loading, crash isolation and easy concurrency make it look extremely attractive, but any even moderately experienced developer knows there's no silver bullet.\r\n\r\nIn this talk we discuss our journey from being \"Erlang newbies\" to pushing a critical system out into M5's high-load production telephony environment. We will focus in particular on the various \"lessons learned\" from the experience; notably:\r\n\r\n* Several great ways to crash the VM and bring down your whole system\r\n\r\nHaving your entire system in a VM can lead to a false sense of security. Things can go wrong, and when they do it will really hurt. We look at ways to break the VM and how to avoid them.\r\n\r\n* Message queues – you really need to look after them\r\n\r\nMessage queues lie at the heart of Erlang's concurrency system, and for 99% of cases they fall into the \"you don't have to care about the internals, they just work\" category. We discuss how to avoid your system hitting the 1% of cases where they can cause serious pain.\r\n\r\n* Running Erlang as a Unix-style service\r\n\r\nOne oft-overlooked shortcoming of Erlang is its lack of ability to be easily started up with a service (/etc/init.d) style interface. We take a brief look at erld, our in-house solution to the problem. [Note: We are presently awaiting management approval to release erld as open source – we hope to have this in the next couple of months, well before LCA rolls around].\r\n\r\n* Hot code loading – it's not nearly as easy as it said on the brochure\r\n\r\nHot code loading promises little short of 100% uptime. We talk about how trying to get it working panned out in practice and how to maximise your chances of getting it to work in your system.\r\n\r\n* Monitor your system like a hawk\r\n\r\nErlang makes it easy for problems to go un-noticed for quite a while before they suddenly cause serious damage. We look at some key areas you can monitor and how to do so.\r\n\r\nThis talk is meant to be anything but a \"why Erlang sucks\" talk; we still love Erlang and are pushing forward with moving all our core systems to use it. We now, however, have a much better understanding of its limitations and foibles than when we started out and we hope to help others avoid some of the pitfalls we have encountered.","Title":"Erlang in production: \"I wish I'd known that when I started\"","URL":"http://lca2012.linux.org.au/schedule/113/view_talk","Event":34,"Start":"2012-01-17 14:20:00","Presenter_emails":"bernie@m5net.com","Presenters":"Bernard Duggan","Duration":"0:50:00","Id":48,"Room Name":"Studio"},{"Description":"The Serval Project is focused on the development of open source software that uses mobile devices to create a resilient mesh network. The mesh network is designed to provide and support communication services without any reliance on existing telecommunications infrastructure. Such infrastructure can be integrated into the overall network where required. \r\n\r\nThe lack of existing telecommunications infrastructure may be due to it being damaged during or disaster or emergency event, or where there are no economic incentives for telecommunications companies to put the infrastructure in place. The focus of this presentation is on the use of the Serval Project software to support collaborative mapping activities.\r\n\r\nA key component in managing an effective response to a disaster event is communication. Communication needs to be achieved between individual team members, between the teams and the management hierarchy and between organisations responding to the event. \r\n\r\nTo improve the effectiveness of this communication an understanding of the geographic layout of the disaster event is required. This includes such factors as where individuals and teams are located, where incidents are occurring and where response infrastructure is located. It is this component that is the focus of the Serval Maps project. \r\n\r\nThe Serval Maps project uses the Serval resilient mesh network to support collaborative infrastructure independent mapping. Users of the application can see on the map their own location, the location of other network peers, and the location of incidents reported by users of the network. \r\n\r\nBy working collaboratively it is anticipated response personnel can form a more informed understanding of what is happening and therefore formulate a more effective response. Individual team members improve their understanding of not only the events that are occurring around them, they are also able to pinpoint where their team members are. Those coordinating the response gain an overview of the disaster and response from the location of teams and the incidents that they add to the map. \r\n\r\nFor instance a team member can add an incident to the map indicating that a road is blocked by flood waters. A second team responsible for transporting equipment from one area to another can see the incident on the map and adjust their route accordingly. The command centre may send out additional teams to assist based on the severity of the situation. \r\n\r\nThis presentation will outline some of the challenges in developing a mapping application that must be infrastructure independent, the lessons learned in developing Android based application. Lastly future directions will be explored including some of the other opportunities of collaborative mapping on mobile devices.","Title":"Serval Maps - Building Collaborative Infrastructure Independent Maps on Mobile Devices ","URL":"http://lca2012.linux.org.au/schedule/126/view_talk","Event":35,"Start":"2012-01-18 16:40:00","Presenter_emails":"romana@servalproject.org,paul@servalproject.org","Presenters":"Romana Challans,Paul Gardner-Stephen","Duration":"0:50:00","Id":49,"Room Name":"Studio"},{"Description":"Filesystems are being asked to scale to larger configurations every week. They need to store more files, larger amounts of data and be able to index that data more efficiently than ever. XFS has had a number of pain points for managing large numbers of files and complex metadata structures that limit it's ability to scale out to the capabilities of it's underlying structures. \r\n                                                                                 \r\nThe first part of this presentation describes the underlying reasons for these limitations and how they have been solved over the past 18 months. Through the use of pretty graphs, shiny pictures and puppies, it will be demonstrated that the work of the past 18 months has resulted in XFS having the most scalable and highest performing metadata subsystem of the current crop of Linux filesystems.  \r\n                                                                                 \r\nThe second part of this presentation will address the challenges we are facing over the next 18 months. These challenges are focused around reliability and robustness and having confidence in a filesystem indexing petabytes of storage.  \r\n                                                                                 \r\nThe problems being solved will be described, along with the solutions being designed, prototyped and implemented that will allow robust deployments of petabyte scale XFS filesystems. Topics being discussed involve improving error detection and handling, use of metadata CRC codes, reverse mappings for efficient lost object recovery and more. More details of some of these topics can be found here:                                                               \r\n                                                                                 \r\nhttp://xfs.org/index.php/Reliable_Detection_and_Repair_of_Metadata_Corruption    \r\n                                                                                 \r\nIn the course of the presentation, it will become obvious why ext4 will not catch up to or replace XFS and why btrfs complements rather than competes with XFS. In other words, the presentation will show that XFS is still the filesystem of choice for large scale storage deployments on Linux and will continue to be so for the indefinite future.\r\n\r\nThe presentation is moderately technical, but most users and administrators of XFS should have no trouble understanding the content. There is, however, sufficient technical depth in the presentation that developers should still find it interesting.","Title":"XFS: Recent and Future Adventures in Filesystem Scalability","URL":"http://lca2012.linux.org.au/schedule/85/view_talk","Event":36,"Start":"2012-01-18 11:30:00","Presenter_emails":"david@fromorbit.com","Presenters":"Dave Chinner","Duration":"0:50:00","Id":50,"Room Name":"C001"},{"Description":"In March 2010, the state of the art for Subversion integration with git was slow and error-prone for many existing repositories with 5 or more years history. One developer started solo on a new approach to solve this problem and was joined along the way by some great people.  The success of this subproject hinged on supplementing the existing protocol documentation for Subversion by reverse-engineering archives of Subversion repositories found in the wild. Maintainability and scalability of the solution were greatly enhanced by a few small extensions to the fast-import protocol used by git, bzr and some other DVCS. Here are a few thoughts on the experience - you don't have to settle for broken when you know how to fix a problem.","Title":"VCS Interoperability","URL":"http://lca2012.linux.org.au/schedule/158/view_talk","Event":37,"Start":"2012-01-20 11:30:00","Presenter_emails":"davidbarr@google.com","Presenters":"David Barr","Duration":"0:50:00","Id":51,"Room Name":"T101"},{"Description":"Smashing a square peg into a round hole: Automagically building and configuring Linux systems that are wildly different.\r\n\r\nDavid Basden and Chris Collins\r\n\r\nAbstract\r\n\r\nYou can’t walk two metres down the street without someone going on about how cool and hip The Cloud is these days, being able to spin up hundreds of identical Linux VMs easily. Even if you’re running your own cloud hardware, tools to build and configure lots of identical systems or VMs are a dime a dozen.  But what if you every system you build is actually totally different?  What if there is no “standard build” or even anything close, with different hardware, networking, software, distro, services, firewalls etc. every time, but you don’t want to spend all your time doing custom server builds and configuration?\r\n\r\nWorking for a hosting provider, we have it even worse that that: Not only do most of our server builds have custom requirements, we also have to configure lots of our own individual systems to deal with monitoring, customer notifications, backups, fire-walling, accounting and system updates. Building a system and configuring the systems that support it by hand can take the best part of a day.\r\n\r\nUsing some really cool algorithms, we’ve made some software that will take vague hand-waving from sales people and turn it into a deterministic set of build steps that can be automated, without a sysadmin being involved at all.  We’ve also written some software that can hook-up scripts, modules and APIs between different servers securely with almost no overhead,  and have it controllable from a single, trivial asynchronous API connection. Between the two of these we’ve gotten heterogeneous server builds that are fully automated, in minutes. The two bits are “make magic” and Orchestra.\r\nRather than spinning up yet another bland VM copy, you get a beautiful and unique snowflake of Awesome.\r\n\r\nmake magic\r\n\r\nThe core of “make magic” derives the tasks required to build a system based on high level requirements. It takes a large pre-defined directed, acyclic dependency graph, and prunes it based on predicates generated from the high level requirements. The graph is then traversed to yield a list of tasks that can then be automated, with the traversal maintaining that any given task has already had it’s dependencies satisfied.  It can be guaranteed to always output a valid, correct list of tasks for any set of input requirements.\r\n\r\nOnce all this is done, “make magic” also keeps track of whether each task has been completed, or has failed etc, with a simple state machine.\r\n\r\nDavid is going to talk about some the really interesting underlying problems that  come up when you have to automatically generate a really specific, and provably correct set of steps from hundreds of thousands of permutations based on some high level requirements. He’s then going to show how you can do this yourself with things you probably have lying around the home, as long as your home has a Linux box, and a network connection to download some python.\r\n\r\nmake magic is written in pure python, but the talk should be accessible to people that don’t know it. Graph theory may be mentioned ‘cause it’s totally cool, but not in a way that is going to get in the way of people who have never heard of it.\r\n\r\nOrchestra\r\n\r\nOrchestra, the system to remotely execute all of the tasks that need to be automated, uses a very lightweight message-passing API over SSL. It can take a task and run it on either a single host, all of a set of hosts, or one host out of a pool. Unlike using ssh for remote control, Orchestra is asynchronous, and so lightweight that it can easily handle hundreds or thousands of concurrent jobs.  It detects and propagates job failures, and deals gracefully with loss/reboots of servers it’s running jobs on.  It’s packaged up for Debian and Redhat, with a core written in Go, and libraries/clients for shell, Python, Go  (or pretty much anything else that can talk to a socket)\r\n\r\nChris is going to talk about Orchestra, and show out how amazingly cool and simple it is, while it can at the same time be used to do really powerful things (generally all at the same time).\r\n\r\nShut up and give me the code\r\n\r\n“make magic” is available at https://github.com/anchor/make-magic\r\nOrchestra is available at https://github.com/anchor/Orchestra\r\n\r\nBio\r\n\r\nChris and David both work for Anchor Systems in Sydney as Linux Sysadmins that spend way too much time doing development to code themselves out of a job.\r\n\r\nChris designed and wrote Orchestra, which Anchor are letting him open source. David did much of the design and implementation of the original build algorithm magic. He then wrote the much cooler free software version “make magic”, which Anchor are also letting him release. \r\n\r\nDavid has been a Linux sysadmin for over 15 years, and has spend a large chunk of that time trying to figure out how to get hundreds of servers to be their own unique snowflakes while also not having to do stuff by hand.   He will talk enthusiastically about what he thinks are the interesting parts of systems / algorithms / concepts  that interest him, in the hope that people listening will find them interesting too.\r\n\r\nFor as long as Chris can remember, he’s been fascinated by Computers.  It was hardly a surprise to family and friends when he became a UNIX Systems Administrator early in his career.  That was 12 years ago, and he hasn’t stopped yet.  Since then he’s also been a developer on Linux based appliances, deployed computational clusters and reverse engineered USB devices.\r\n\r\nTarget audience: sys admins","Title":"Smashing a square peg into a round hole: Automagically building and configuring Linux systems that are wildly different.","URL":"http://lca2012.linux.org.au/schedule/112/view_talk","Event":38,"Start":"2012-01-17 10:30:00","Presenter_emails":"davidb@anchor.net.au,chris.collins@anchor.net.au","Presenters":"David Basden,Christopher Collins","Duration":"0:50:00","Id":52,"Room Name":"C001"},{"Description":"Multithreaded appliances are becoming a standard each developer must know at his best. Qt, one of the most popular Open Source frameworks, powering projects such as MeeGo and KDE, is also among one of the most popular libraries providing multi-thread facilities.\r\n\r\nLots of developers are already taking advantage of Qt and his multi-threading facilities, but most of the times, they are not familiar with the least known features, which could greatly improve their work. Are you creating a separate thread for processing a single method? Are you processing a list of elements in a single thread, or just in a separate one? Uploading textures to OpenGL from the main thread? Or worse, disregarding threads at all? This talk is for you.\r\n\r\nBesides showing the usage of the most common features, such as QThread, QMutex or QSemaphore, this talk will strongly focus on uncommon features such as QtConcurrent or the new threaded OpenGL support, which are what makes Qt really taking a stand, and can ease your life as a developer while improving performance.\r\n\r\nA variety of demos for each topic will be shown, to see how each component can fit into a real-world appliance.","Title":"Efficient multithreading with Qt","URL":"http://lca2012.linux.org.au/schedule/165/view_talk","Event":106,"Start":"2012-01-17 16:40:00","Presenter_emails":"dario.freddi@collabora.com","Presenters":"Dario Freddi","Duration":"0:50:00","Id":53,"Room Name":"C001"},{"Description":"Codec2 is an open source low bit rate speech codec designed for communications quality speech at around 2400 bit/s. Applications include low bandwidth HF/VHF digital radio and VOIP trunking. Codec 2 operating at 2000 bit/s can send 32 phone calls using the bandwidth required for one 64 kbit/s uncompressed phone call. It fills a gap in open source, free-as-in-speech voice codecs beneath 5000 bit/s and is released under the GNU Lesser General Public License (LGPL).\r\n\r\nSpeex and the other open video and audio codecs have proven it’s possible to create a patent free, high quality codec. There is an important social theme behind these technical projects. A free codec helps a large amount of people and promotes development and innovation. A closed codec helps a small number people make money at the expense of stifled business and technical development for the majority.\r\n\r\nOne important part of Codec 2 is the use of open source and community development techniques. The net result was access to a world wide \"brains trust\" and network of beta testers that has resulted in swift development of effective DSP algorithms.\r\n\r\nThis presentation will explain the advanced DSP techniques used in Codec 2 in terms the average Linux user can understand, plus give examples of end user applications.","Title":"Codec 2 - Open Source Speech Coding at 2400 bit/s and Below","URL":"http://lca2012.linux.org.au/schedule/59/view_talk","Event":40,"Start":"2012-01-17 15:40:00","Presenter_emails":"david@rowetel.com","Presenters":"David Rowe","Duration":"0:50:00","Id":54,"Room Name":"Studio"},{"Description":"With the help of the Universe's best celestial clocks (millisecond pulsars!) and some specialized open source software, radio astronomers are searching for the almost-imperceptible stretching of the fabric of space by gravitational waves — predicted by Einstein's theory of general relativity but not yet detected directly. In this presentation, I will introduce you to the physics of gravitational wave detection, the methodology and software making discoveries possible, and how open source tools are enhancing collaboration in the astrophysics research community.","Title":"Using Open Source to Build a Gravitational Wave Observatory","URL":"http://lca2012.linux.org.au/schedule/29/view_talk","Event":41,"Start":"2012-01-19 16:40:00","Presenter_emails":"ebeth@gag.com","Presenters":"Elizabeth Garbee","Duration":"0:50:00","Id":55,"Room Name":"C001"},{"Description":"The OMAP4430 is a system-on-chip recently released by Texas Instruments. What makes it interesting, is that not only is it the first dual-core ARM Cortex A9 embedded ARM processor, but TI also put two Cortex M3 micro-controllers on the same chip, sharing the same memory. All four cores support the ARM Thumb-2 instruction set, so conceivably, they could all run SMP Linux!\r\n\r\nThis talk will outline all of the hurdles that we encountered, hacks we did to get around them, and also present some performance numbers for the system. We also hope that manufacturers can take something from our experience making future asymmetric chips more amenable to running Linux without all the hacks!","Title":"Operating System Support for the Heterogeneous OMAP4430: A Tale of Two Micros","URL":"http://lca2012.linux.org.au/schedule/57/view_talk","Event":42,"Start":"2012-01-17 15:40:00","Presenter_emails":"etienne.lesueur@nicta.com.au","Presenters":"Etienne Le Sueur","Duration":"0:50:00","Id":56,"Room Name":"C001"},{"Description":"Ever wonder what happens to your most important application if your server goes cactus? Does the mere thought make the hair on your neck stick up like that of a roo facing a road train going 100? And, when you think about server failure, are you as well protected as a skinny dipper on a North Queensland beach during stinger season?\r\n\r\nRelax. We're here to help.\r\n\r\nIn this tutorial, three of the world's best Linux High Availability experts -- including the original author of Pacemaker -- will walk you through setting up a 2-node high availability cluster front to back. From configuring DRBD-based replicated storage, to creating a baseline Pacemaker configuration, to adding a highly available application. All in under two hours.\r\n\r\nAttendees should bring Linux laptops with KVM and libvirt installed, and will be provided with pre-installed virtual machine images. Required memory for the two virtual machines is approximately 1GB in total. The virtual machines will run on any reasonably recent hardware, but for best results, bring a laptop with virtualization CPU extensions (Intel VT or AMD SVM) available and enabled in the BIOS. Please do not bring a road train, or a roo, and do wear clothes.\r\n\r\nCo-tutors:\r\nAndrew Beekhof (Red Hat, Melbourne, Victoria)\r\nFlorian Haas (hastexo, Vienna, Austria)\r\nTim Serong (SUSE, Hobart, Tasmania)\r\n","Title":"High Availability Sprint: from the brink of disaster to the Zen of Pacemaker","URL":"http://lca2012.linux.org.au/schedule/81/view_talk","Event":43,"Start":"2012-01-19 10:30:00","Presenter_emails":"florian.haas@hastexo.com","Presenters":"Florian Haas","Duration":"1:50:00","Id":57,"Room Name":"T101"},{"Description":"Software is a human construct and like everything we make it \r\neventually falls into disrepair.  Houses get mould, vermin\r\ninfestations, and frightening old wiring.  Software projects get\r\nequivalents of these, albeit a few decades faster.\r\n\r\nThis talk is about the experience of doing a major renovation on \r\na software relic: the Cyrus IMAP server.  Fastmail (now Opera\r\nSoftware Australia) has been using Cyrus commercially to provide\r\nan IMAP interface to an email store for years now, and over the \r\nlast year has significantly contributed to a resurgent effort to\r\nmodernise the code and rejuvenate the community.  The author\r\nworks fulltime on this project and has both observed and\r\ncontributed.\r\n\r\nTopics will include: introducing modern software engineering \r\npractices like Continuous Integration, making testing happen,\r\nattracting a developer community, a practical guide on how to\r\nfind and fix outdated coding practices (a.k.a. bugs waiting to\r\nhappen), and an introduction to paleoentomology.  All\r\nillustrated with real world examples.\r\n\r\nIf your organisation depends on ancient software in need of \r\nrevitalising, or if you're just looking for some spare time Open \r\nSource work to keep your hand in, come to this talk and get some\r\npractical tips and a laugh or two.\r\n","Title":"This Old Code, or Renovating Dusty Old Open Source For Fun and Profit","URL":"http://lca2012.linux.org.au/schedule/170/view_talk","Event":44,"Start":"2012-01-17 13:20:00","Presenter_emails":"gnb@fastmail.fm","Presenters":"Greg Banks","Duration":"0:50:00","Id":58,"Room Name":"T101"},{"Description":"What has the government been spending my money on? Which corporation is responsible for the most oil spills? How much radiation is coming out of the crippled Fukushima nuclear plant? Where are the crime hot spots in my area? To paraphrase Special Agent Mulder, the data is out there...\r\n\r\nThe web is full of public data but how do you transform the text from some web page into a beautiful map, how can you get the latest updates when information in that CSV file changes? Web scraping can help and ScraperWiki is an open source online tool to make that process simpler and more collaborative. Anyone can write a scraper using the online editor and the code and data are shared with the world. Because it's a wiki, other programmers can help maintain and improve the code.\r\n\r\nScraperWiki is used by projects such as the OpenAustralia Foundation’s PlanningAlerts to gather development applications in your local area, the OpenCorporates project to create an open database of every corporation in the world and journalists in the emerging world of data-driven investigative journalism.\r\n\r\nIn this presentation I’ll show how you can start to liberate data you’re interested in on the web. This can help you with everything from satisfying a passing curiosity, to being able to bolt on a powerful API to data for your next big web application.\r\n\r\nI will provide you with an overview of the ScraperWiki project and what you can do with ScraperWiki and open data in general. We’ll write a simple scraper to show how easy it is for even people with only basic programming knowledge to get started with their own guerrilla data liberation.","Title":"Guerrilla Data Liberation","URL":"http://lca2012.linux.org.au/schedule/163/view_talk","Event":45,"Start":"2012-01-20 10:30:00","Presenter_emails":"henare.degan@gmail.com","Presenters":"Henare Degan","Duration":"0:50:00","Id":59,"Room Name":"C001"},{"Description":"The Catalyst Open Source Academy is an initiative designed to provide training and work experience for young New Zealand technologists.\r\n\r\nThe pilot programme was held for two weeks in January 2011.  It gave 17 Secondary School students a taste of real open source development through a combination of classroom sessions and hands-on project work.\r\n\r\nThe aim was to get the students to the point where they could usefully contribute to a real (open source) project.\r\n\r\nBy organising and funding the Academy, Catalyst hoped to show young technologists how to participate in open source communities and to fully explore their passion for IT through freely available open source tools.\r\n\r\nIn this presentation Catalyst's Ian Beardslee will outline how they put the initiative together, what worked and what didn't, and lessons learnt from the project.","Title":"Creating the Open Source Academy","URL":"http://lca2012.linux.org.au/schedule/55/view_talk","Event":46,"Start":"2012-01-17 11:30:00","Presenter_emails":"ian@catalyst.net.nz","Presenters":"Ian Beardslee","Duration":"0:50:00","Id":60,"Room Name":"Studio"},{"Description":"You have so much you want to teach, how do you structure it so that your training course is both interesting and challenging? How much theory can you squeeze into an hour before your attendees have forgotten where you started? How do you structure your course to account for classes which move slower or faster than average?\r\n\r\nWhether you are designing a class to be presented in person, a tutorial to be worked through on-line, a practical book on how to do something, or even extensive user documentation; correct structure makes a huge difference to how memorable the information is.\r\n\r\nBurn-out and full brains are a major problem for anyone attending any intensive learning activity. At university, a student attends many classes all on different topics, but only has to learn one to two hours of material per class per day. At a conference, an attendee may sit through many hours of interesting talks, but they have the freedom to choose how much they participate in each. In an intensive training course, a student has to learn, understand and fully absorb 6 hours of material on the same topic, every day for several days in a row. Worse, each of these hours builds on the one before; requiring a level of alertness and participation not usually needed at educational institutions, conferences or in the workplace.\r\n\r\nMake your training experience truly stand out by structuring it to help alleviate burn-out. These techniques are essential for a multi-day training course, but will provide you with a solid background for single or even half-day sessions as well.\r\n\r\nThis talk will describe what Perl Training Australia has learned about course structure for technical courses involving lots of hands-on programming exercises. We will cover answers to the questions above, as well discussing other issues such as cognitive load, learning fatigue and ideal classroom set up.","Title":"Helping your audience learn","URL":"http://lca2012.linux.org.au/schedule/208/view_talk","Event":47,"Start":"2012-01-18 14:20:00","Presenter_emails":"jarich@perltraining.com.au","Presenters":"Jacinta Richardson","Duration":"0:50:00","Id":61,"Room Name":"Studio"},{"Description":"Presented by Martin Schwenke and Ronnie Sahlberg.\r\n\r\nCTDB, the Clustered Trivial Database, is used to support clustered\r\nversions of Samba, NFS, HTTP and other protocols.  It handles node\r\nmonitoring, network failover and synchronisation of state between\r\nnodes.  As such, there are a lot of moving parts and automated testing\r\nis non-trivial.\r\n\r\nWe present details of some testing techniques being used by CTDB.\r\nGiven that CTDB normally runs as root we have tried to find testing\r\nmethods that allow a developer to run \"make test\" as a regular user in\r\nthe development tree and do a useful amount of testing.  One unit\r\ntesting technique involves scripted stub replacements to replace\r\nvarious system commands, allowing event scripts to be tested in a\r\nsandbox.  We were going to build a shared library containing most of\r\nthe CTDB code and replace some functions with stubs using LD_PRELOAD,\r\nallowing a useful subset of CTDB's functions to be unit tested.\r\nInstead we decided to build CCAN-style test programs that \"just\"\r\n#include all the relevant source code - this makes it easy to test\r\nstatic functions.  For system testing, we also discuss our use of\r\nKVM-based virtual clusters and our trivial configuration tool to make\r\nit easier to setup such clusters.  The techniques probably aren't\r\noriginal or mindblowing but should still be of interest to many\r\ndevelopers. :-)\r\n","Title":"Testing CTDB - not necessarily trivial","URL":"http://lca2012.linux.org.au/schedule/194/view_talk","Event":48,"Start":"2012-01-18 13:20:00","Presenter_emails":"martin@meltin.net,ronniesahlberg@gmail.com","Presenters":"Martin Schwenke,Ronnie Sahlberg","Duration":"0:50:00","Id":62,"Room Name":"C001"},{"Description":"The PC BIOS is a dreadful thing. Poorly standardised and often poorly implemented, it has one job to do and frequently does it badly. The kernel and bootloaders are obliged to devote extensive sections of code to working around issues present in the BIOS, code and time that could have been better spent elsewhere.\r\n\r\nEveryone agrees that the PC BIOS is awful. So why, when Intel introduced the Extensible Firmware Interface (EFI) as a replacement for it, did we not great it with open arms?\r\n\r\nThis presentation will introduce EFI to the audience, covering the reasons for its existence and its benefits. It will then go on to discuss everything that's wrong with it, from poorly considered aspects of the specification to implementation flaws.\r\n\r\nShould it be necessary, audience members are advised to provide their own gin.","Title":"EFI and Linux: the future is here, and it's awful","URL":"http://lca2012.linux.org.au/schedule/63/view_talk","Event":49,"Start":"2012-01-17 11:30:00","Presenter_emails":"mjg59-lca2012@srcf.ucam.org","Presenters":"Matthew Garrett","Duration":"0:50:00","Id":63,"Room Name":"Caro"},{"Description":"The OpenStack Project has seen a phenomenal growth in its first year and a half. Part of the reason that we've been able to handle the dramatic influx in developers is by having automation systems that allow us to treat all developers equally from a process perspective, keep our trunk always clean by performing testing pre-merge and still be streamlined enough that the process did not get in the way of development.\r\n\r\nJames Blair and I will start with a brief (very brief) history of where we started and the techniques we employed at first, including bzr, launchpad and tarmac. We had some wins and learned some excellent lessons from the early setup.\r\n\r\nWe'll move quickly on to the meat though, which is the design and implementation of the current system, based around a combination of gerrit and jenkins. We'll cover the workflow that we support and require, how we implemented it and what the challenges were.\r\n\r\nAt the end of the talk, you should come away with a good sense of why we made the choices we made and how they might be applicable to your project, and how to go about implementing them. You should also have been convinced that any process which does not employ pre-merge testing is doomed to failure. :)","Title":"Scaling OpenStack Development with git, Gerrit and Jenkins","URL":"http://lca2012.linux.org.au/schedule/182/view_talk","Event":50,"Start":"2012-01-17 14:20:00","Presenter_emails":"mordred@inaugust.com,corvus@inaugust.com","Presenters":"Monty Taylor,James Blair","Duration":"0:50:00","Id":64,"Room Name":"T101"},{"Description":"Threading Building Blocks (TBB) is a C++ threading library that makes multicore programming more accessible. We considered TBB for web application developers working in script languages.\r\n\r\nMany websites require a non-trivial amount of per-request processing in the application layer, to retrieve, consolidate or manipulate data. Achieving better performance at this level improves response times and the overall user experience. Parallelising access to database and web service back-end layers can yield substantial improvements in perceived performance.\r\n\r\nWe added TBB support into PHP and Perl, starting with HipHop as the PHP implementation of choice and later adding Perl support.\r\n\r\nHipHop is a PHP to C++ cross compiler that was developed by Facebook to cut down on resource needs and speed up the execution times of their gigantic web infrastructure. HipHop project is a PHP implementation thread safe and already uses TBB for memory management. \r\n\r\nWe started by extending the existing support and added first only the new *parallel_for* function. Later, we added concurrent data structures and re-implemented our first approach. We have now a robust implementation of *parallel_for* and *parallel_reduce* with the data structures needed to support them. \r\n\r\nIn our work with the PHP HipHop compiler we also wrote a patch set for WordPress and enhanced WordPress with our new *parallel_for* language extension. This trial brought us instant success in reduced page load times. The patch set for WordPress only replaced some key *foreach* loops with *parallel_for* and was our first real success with the TBB library in PHP. \r\n\r\nThe Perl project worked towards a Perl module that can be used to get access to TBB functions directly. The module is now stable enough to demonstrate the gain by using TBB in Perl. Demos of our work are running on geopic.me\r\n\r\nThreading interpreters bury they own set of challenges but we can get further by using TBB. The libraries we produced so far will be further developed and maintained. We will continue working on both platforms to expose the power of multicore CPUs to developers in an approachable way. ","Title":"Optimizing Web Performance with TBB","URL":"http://lca2012.linux.org.au/schedule/196/view_talk","Event":51,"Start":"2012-01-17 10:30:00","Presenter_emails":"multicorelca@gmail.com,lenz@springtimesoft.com","Presenters":"Nicolas Erdody,Lenz Gschwendtner","Duration":"0:50:00","Id":65,"Room Name":"T101"},{"Description":"Operating System scheduler assigns the most eligible process to run on a CPU. On a multi-CPU system, tasks are assigned to CPUs independent of each other. The scheduler may not look into inter-process dependencies while assigning processes. Hence, at any given point in time, the set of processes that is running on the system might not be the optimal one. Gang Scheduling is a method to schedule a group of inter-dependent processes on different CPUs simultaneously. In this talk, we will discuss the design alternatives for Gang Scheduling, the experiments with KVM Hypervisor and the results.\r\n\r\nIn a multi-CPU Virtual Machine(VM), processes representing virtual CPUs(VCPUs) are not guaranteed to be scheduled simultaneously. This challenges the assumptions held by the VM about the CPUs on which it is running. In turn, this can inhibit the performance of processes running inside the VM in several ways.\r\n\r\nFor example, suppose one of the VCPUs takes a spinlock (defined within a VM) and gets preempted by the scheduler before it could release that spinlock. This forces other VCPUs wanting to acquire the same spinlock to spin for a long time wasting lot of CPU cycles. The problem is popularly known as Lock-Holder Preemption. This results in higher synchronization latency for workloads running within a VM. These latencies affect the workloads in an adverse manner. In contrast, with Gang Scheduling, all the VCPUs are scheduled simultaneously on a group of CPUs. These changes help to reduce synchronization latencies, resulting in workloads performing better in some cases.\r\n\r\nExperiments were carried out to measure the benefits of gang scheduling with various workloads (CPU bound, IO bound, CPU+IO bound) in the KVM Hypervisor. In some cases, improvements more than 50% were observed.\r\n","Title":"Gang Scheduling in Linux Kernel Scheduler","URL":"http://lca2012.linux.org.au/schedule/171/view_talk","Event":52,"Start":"2012-01-19 16:40:00","Presenter_emails":"nikunj.dadhania@gmail.com","Presenters":"Nikunj A  Dadhania","Duration":"0:50:00","Id":66,"Room Name":"Studio"},{"Description":"Dr. Ben Martin and Associate Professor Martin Sevior\r\n\r\nAbiword is an open source word processor with advanced collaboration capabilities. Documents can be shared either stored on abicollab.net or edited on a purely peer to peer basis. \r\n\r\nAbiword has recently gained RDF support across its native abw format, RTF, as well ODF format files. RDF is the base layer of the Semantic Web and allows the meaning of information to be described in a manner that a computer can understand. The intention of RDF in abiword is not an academic one. Instead it should allow the computer to offer authors and viewers assistance based on knowledge from the document. For example, that “Fred” refers to “Fred Smith” who has a specific phone number and will be at the meeting next week. Incidentally, that this meeting is more than 2 hours drive and you might like to make arrangements to get there soon. Perhaps a specific flight in your itinerary is canceled due to some ash cloud, it would be nice to know that while reading the document. \r\n\r\nWhile things are built on RDF, you should also be able to make use of it without being a convert. Dragging a location from Google Earth to abiword should import a geolocation into RDF in the document. Likewise for events and contacts in your email and groupware software. Information should move as you like rather than constrain you. The RDF portion of the talk will tell you what and how you can do things now and where things are heading with semantics and abiword.\r\n\r\nWith the port to Gtk+-3, abiword can now have it’s interface shown in a Web browser. Together with abicollab for storage this allows abiword to run both storage and processing in the cloud. No longer are users subjected to the limited editing capabilities of wikis; pages can be edited with abiword presented through HTML and viewed as HTML,PDF, ODF, or ebook files.\r\n\r\nIn 2011 abiword was one of the first word processors to support the proposed Generic Change Tracking (GCT) proposal from the OASIS group. The GCT includes constructs to markup XML so that the changes, additions, deletions of elements can be tracked as well as their coalescing. Attributes such as the text style, colour etc are traced using an attribute stack in the XML. Change Tracking in ODF allows governments and businesses to see the evolution of a document, sign off on changes and provide audit trails, and because all this happens in a truely open XML document standard, the ODF files can be read and written by a wide range of software.","Title":"Cloud meets Word Processor -- RDF and abiword in the Browser.","URL":"http://lca2012.linux.org.au/schedule/82/view_talk","Event":28,"Start":"2012-01-20 11:30:00","Presenter_emails":"monkeyiq@users.sourceforge.net","Presenters":"Ben Martin","Duration":"0:50:00","Id":67,"Room Name":"Studio"},{"Description":"Join us for a light-hearted primer on user experience (UX) for geeks. In this session, we'll take a fast paced tour of the world of Android and explain how, while smartphones may initially bare no similarities to vi, good UX design is something our community should know all about. \r\n\r\nFind out what Android design can learn from vi, why a carefully considered interface is a critical dependency of any Android app, how to design an amazing Android app when you're more at home in a console than you are in Inkscape, and how context switching means something completely different when it comes to a smart phone.\r\n\r\nWith Christopher Neugebauer.","Title":"Android is not vi: mobile user experience for geeks","URL":"http://lca2012.linux.org.au/schedule/142/view_talk","Event":54,"Start":"2012-01-19 15:40:00","Presenter_emails":"paris@secretlab.com.au","Presenters":"Paris Buttfield-Addison","Duration":"0:50:00","Id":68,"Room Name":"C001"},{"Description":"Logo design is an all too common task for the open source project, especially a project with fewer artistic contributors. Getting logos wrong is often far too easy, while getting one right can bring huge rewards (though not often the fame and easy living one might wish it brings). By studying some of the successes and failures in the area, you can gain enough insight to attempt to tackle one. However, actually implementing the design can also bring its own challenges.\r\n\r\nAfter wandering in the wilderness of hard-core coding for a few too many years, Jon decided to return to his artistic roots and tackle the tricky art of logo design for you. By chronicling his difficult journey, including (sometimes) successes and (far too often) failures, he has collected enough to allow you to start on the same task yourself.\r\n\r\nThis tutorial will first present an overview of both good and bad logo design, with failures often showing more than successes. And while studying such cases will be educational, the scope and impact of some of the bad logos can bring much entertainment. Being thusly entertained will also serve to start you on the road to avoid the worst of those mistakes.\r\n\r\nThe key hands-on tasks, though, will focus on building up a working knowledge and experience with open source tools that can be used in logo design along with some of the many was to use them. Inkscape, Krita, GIMP and others will be explored, with a strong emphasis on their use for logo design.\r\n\r\nAlthough a single tutorial will usually not be able to grant one with sudden artistic talent, removing the barriers to exercising talent will be taught. Learning the thought process and approach for logo design, how it differs from other types of artistic work, and how to most effectively use tools in its pursuit should be one concrete results of completing this tutorial. If you have some aptitude you might be surprised at what you will be able to do by the end. But at the least you should gain what it takes to work with others in creating and refining a logo with open source tools.","Title":"Adventures in Logo Design: One Coder's Pain is Your Gain.","URL":"http://lca2012.linux.org.au/schedule/128/view_talk","Event":55,"Start":"2012-01-19 15:40:00","Presenter_emails":"jon@joncruz.org","Presenters":"Jon Cruz","Duration":"1:50:00","Id":69,"Room Name":"T101"},{"Description":"This talk will be a fast-paced tour of what has been happening in the kernel community in the last year, and what can be expected in the year (or so) to come.  Attendees of any technical ability will go away with a better understanding of what's up with one of the largest and most active software development projects on the planet.","Title":"The Kernel Report","URL":"http://lca2012.linux.org.au/schedule/159/view_talk","Event":56,"Start":"2012-01-17 10:30:00","Presenter_emails":"corbet@lwn.net","Presenters":"Jonathan Corbet","Duration":"0:50:00","Id":70,"Room Name":"Caro"},{"Description":"Linux goes from one success to the next, but that does not mean\r\nthat we are running out of problems to solve.  Community issues,\r\nhardware changes, scalability concerns, and a widening user base\r\nall present challenges to the plumbing (kernel and low-level system utility) community.  This talk, an updated version of the opening keynote for the 2011 Linux Plumbers Conference, will focus on the problems we have yet to solve and the shape that some of the solutions may take.","Title":"Challenges for the Linux plumbing community","URL":"http://lca2012.linux.org.au/schedule/160/view_talk","Event":57,"Start":"2012-01-19 15:40:00","Presenter_emails":"corbet@lwn.net","Presenters":"Jonathan Corbet","Duration":"0:50:00","Id":71,"Room Name":"Caro"},{"Description":"The Bourne shell is universally available on every Linux system, from the least-powerful embedded device, to the largest supercomputer.\r\nIn this tutorial, we'll cover the basics of:\r\n The Shell's input: how it reads words, splits them, expands special stuff, etc.\r\n Control flow: case, if, while, for\r\n Common utilities: sed, awk, grep, test, find, xargs, etc\r\n\r\nAfter some introductory material, we'll spend the time working together to build a simple server for fortunes/fables entirely in shell. \r\n\r\nAttendees should bring laptops, and be competent with a text editor.","Title":"Beginning with the Shell","URL":"http://lca2012.linux.org.au/schedule/64/view_talk","Event":58,"Start":"2012-01-18 10:30:00","Presenter_emails":"peter.chubb@nicta.com.au","Presenters":"Peter Chubb","Duration":"1:50:00","Id":72,"Room Name":"Studio"},{"Description":"Once upon a time, you could put a floppy disk with the Linux kernel on it into a PC and it would boot.\r\n\r\nNowadays, you have to use a separate program (LILO, GRUB, U-Boot, Blob, LART, RedBoot, etc., etc.) to load Linux, set up some parameters, and then start it running.\r\n\r\nWhen you have new hardware, this sucks.  You have to port not one but two programs that have intimate knowledge of the hardware.  And you generally have to port USB stacks, Network drivers, etc., to an environment that's only used at boot time.\r\n\r\nLinux has a feature, kexecboot, that allows a running kernel to replace itself with another.  This has been used in the Zaurus OpenEmbedded port to use Linux as a second-stage bootloader.\r\n\r\nSo here's the plan:  to use Linux with a small carefully-crafted initial ramdisk as a generic bootloader.  The advantages should be obvious: port drivers only once; have a feature-rich pre-boot environment; not have to learn yet another low-level programming environment, and be able to boot anything (not just Linux) that you can get into the machine's memory.\r\n\r\nWe currently have a plan, and a body to work on this.  By December, we should have something reasonable for people to play with.\r\n\r\nIn this talk, we'll go through the problems involved in getting from bare hardware to a running system, (i.e., what a bootloader does) and the challenges and experience of making a small, custom linux system that can boot not just Linux, but other operating systems such as L4 or Windows, and that works on a wide variety of platforms (ARM, X86, M68k, etc).","Title":"Linux as a Boot Loader","URL":"http://lca2012.linux.org.au/schedule/49/view_talk","Event":59,"Start":"2012-01-18 15:40:00","Presenter_emails":"peter.chubb@nicta.com.au","Presenters":"Peter Chubb","Duration":"0:50:00","Id":73,"Room Name":"C001"},{"Description":"Application logs contain a wealth of data on events in a system, but are typically only examined after an incident occurs.  Due to a lack of a common language between open source tools, these events remain hidden, unexported to a monitoring system.\r\n\r\nIn this presentation, Jamie will describe and demonstrate a general purpose tool for extracting metrics from logs, and exporting them in real time.","Title":"Extracting metrics from logs for realtime trending and alerting","URL":"http://lca2012.linux.org.au/schedule/203/view_talk","Event":60,"Start":"2012-01-17 11:30:00","Presenter_emails":"jaq@spacepants.org","Presenters":"Jamie Wilkinson","Duration":"0:50:00","Id":74,"Room Name":"C001"},{"Description":"Ever thought that there were too many audio codecs, each with its own special niche? So did we, so we made a new one (1). The difference is that Opus scales from very low bit-rate VoIP to high-fidelity, low delay music transmission. It can be used for anything from making phone calls, to remote jam sessions, to archiving your music collection. It's better at speech than Speex, and better at music than Vorbis and MP3.\r\n\r\nOpus is the product of a standardization process at the IETF, as a collaboration between the developers of the Xiph.Org CELT codec (2) and Skype SILK codec. This talk will describe the features, as well as a technical overview of the codec. It will also give an overview of the standardization process, including the issues involved in standardizing a free codec at the IETF. At last,  listening test results will be presented, along with a demo.\r\n\r\n(1) http://xkcd.com/927/\r\n(2) Presented at LCA 2009","Title":"Opus, the Swiss Army Knife of Audio Codecs","URL":"http://lca2012.linux.org.au/schedule/137/view_talk","Event":61,"Start":"2012-01-17 16:40:00","Presenter_emails":"jmvalin@jmvalin.ca","Presenters":"Jean-Marc Valin","Duration":"0:50:00","Id":75,"Room Name":"Studio"},{"Description":"mitmproxy is great new tool for investigating the conversations your web browsers &amp; devices carry out. Not only will it hack open HTTPS connections with ease, from the console tool you can halt, inspect, modify and replay requests in either direction.\r\n\r\nMany websites take additional steps to obscure or encrypt the data they are passing over HTTPS -- with mitmproxy's straightforward python API you can run custom functions over the packet contents to reveal the secrets being leaked, and to rewrite their contents.\r\n\r\nWe will look at a few examples of how mitmproxy has been used by its creator Aldo Cortesi in live investigations, showing how your personal data such as the Apple iOS unique device identifier (UDID) has been mishandled by various upstream application vendors, making it possible to de-anonymise your real-world identity in many cases.","Title":"mitmproxy - use and abuse of a hackable SSL-capable man-in-the-middle proxy","URL":"http://lca2012.linux.org.au/schedule/73/view_talk","Event":62,"Start":"2012-01-19 11:30:00","Presenter_emails":"jim@gonzul.net","Presenters":"Jim Cheetham","Duration":"0:50:00","Id":76,"Room Name":"Caro"},{"Description":"Ever since Alexander Fleming discovered the first antibiotic being produced by a Penicillium mould in 1928, scientists have been searching bacteria and fungi for new substances to combat infectious diseases. In the last 40 years however, only few new substances have been discovered that actually reached the market. In the arms race between bacteria developing new resistances and humanity developing new antibiotics, a more organized approach on drug discovery can keep us from falling behind. With the advent of high throughput genetic sequencing, a large number of bacterial genome sequences have become available for analysis. Rather than testing every candidate strain for antimicrobial activity and then painstakingly isolating and characterizing the substance causing this activity, it has now become viable to predict the substances a bacterium can produce using computer-based prediction algorithms.\r\n\r\nantiSMASH is an Open Source pipeline that combines all published methods for predicting the genetic potential to synthesize antibiotics and other interesting small-molecular substances in bacteria and fungi. By combining existing Open Source tools with re-implementations of published but proprietary prediction methods, antiSMASH manages to provide life scientists with a user-friendly web interface and publication-quality illustrations.\r\n\r\nThis talk will present to the interested non-biologist how the whole process of going from sequence information to prediction of produced antibiotics is done, requiring as little previous knowledge in mathematics and biology as possible. The author will also talk about the differences in developing Open Source software in an academic environment as compared to traditional OSS development.","Title":"antiSMASH: Searching for New Antibiotics Using Open Source Tools","URL":"http://lca2012.linux.org.au/schedule/75/view_talk","Event":65,"Start":"2012-01-17 13:20:00","Presenter_emails":"kai.blin@biotech.uni-tuebingen.de","Presenters":"Kai Blin","Duration":"0:50:00","Id":77,"Room Name":"Caro"},{"Description":"","Title":"Lunch","Event":18,"Start":"2012-01-18 12:20:00","Duration":"1:00:00","Id":78,"Room Name":"Cafeteria"},{"Description":"","Title":"Morning Tea","Event":10,"Start":"2012-01-18 10:00:00","Duration":"0:30:00","Id":79,"Room Name":"Cafeteria"},{"Description":"","Title":"Afternoon Tea","Event":11,"Start":"2012-01-18 15:10:00","Duration":"0:30:00","Id":80,"Room Name":"Cafeteria"},{"Description":"Modern hardware platforms include numerous features to support awesome OS and application functionality.  Often, those platform features require careful initialization by BIOS to work correctly, and require carefully written ACPI tables to tell the OS how it can use them.  Often, BIOS gets these wrong, and the functionality depending on those platform features suffers.\r\n\r\nWe created BITS, the BIOS Implementation Test Suite, to allow experts in platform-level functionality to produce BIOS tests for that functionality, and to support BIOS and OS developers who want to validate that functionality.  BITS allows domain experts to use and test platform functionality without having to write low-level C code or become an expert in a special-purpose test environment.\r\n\r\nBITS uses GNU GRUB2 as a capable pre-OS environment; to that, it adds the full Python interpreter and much of the standard library, as well as the ACPICA interpreter, and various additional Python modules to interact with the hardware platform.  You can write high-level Python code to evaluate ACPI methods and access arbitrary hardware, either to produce tests or just to explore.\r\n\r\nWe'll demo BITS and its functionality, and talk about how we made Python run in a bootloader.  We'll show you how to turn your understanding of platform issues into test suites, and how we use BITS to ensure that those issues won't appear in new BIOSes.  Along the way, we'll give you an overview of just how much your system still depends on BIOS, and we'll show you how to use BITS to explore your own system's functionality.","Title":"BITS: Running Python in GRUB to test BIOS and ACPI","URL":"http://lca2012.linux.org.au/schedule/148/view_talk","Event":64,"Start":"2012-01-18 16:40:00","Presenter_emails":"josh@joshtriplett.org","Presenters":"Josh Triplett","Duration":"0:50:00","Id":81,"Room Name":"C001"},{"Description":"Tux in (near) space!\r\n\r\nThis talk will describe how to launch and recover high altitude balloons: logistics, regulations, and most importantly the open source hardware and software used. Arduino hackers, amateur radio operators and anyone who likes seeing photos of earth from 35km will enjoy this talk.\r\n\r\nProject Horus is a high altitude balloon project run by amateur radio and electronics enthusiasts for fun and experimentation. We launch payloads into the stratosphere, capturing photographs, recording sensor data and provides a launch platform for high altitude experiments.\r\n\r\nAttendees of  LCA 2011 will be familiar with the project; the team showed off the video of a plush Tux, and auctioned a print of that toy at the conference dinner.","Title":"Tux in Space: High altitude ballooning","URL":"http://lca2012.linux.org.au/schedule/125/view_talk","Event":63,"Start":"2012-01-17 14:20:00","Presenter_emails":"joel@jms.id.au,lenniethelemming@gmail.com","Presenters":"Joel Stanley,Mark Jessop","Duration":"0:50:00","Id":82,"Room Name":"Caro"},{"Description":"Figuring out the system wide implications of accepting an updated package into a release is currently a bit of an art form. Balancing risk and implications of new features/bug fixes in a specific package, against causing problems for other dependent packages, makes release management challenging.  There's quite a difference between a bug fix to a compiler, and one self contained application.  From a release perspective though, they are both packages.\r\n\r\nIn this presentation, we will discuss some techniques and tools for assessing the impact of a specific package change, and some heuristics that might help with making the priority calls when those release deadlines are approaching.","Title":"Data mining packages to assess update risks.","URL":"http://lca2012.linux.org.au/schedule/103/view_talk","Event":66,"Start":"2012-01-18 14:20:00","Presenter_emails":"kate.stewart@ubuntu.com","Presenters":"Kate Stewart","Duration":"0:50:00","Id":83,"Room Name":"C001"},{"Description":"The Software Freedom Day event in Melbourne, 2010, was judged to be one of the three best Software Freedom Day events in the world [1]. \r\n\r\nLead by Dale Dickens, and with massive contributions from Donna Benjamin, Ben Sturmfels and countless others, the event attracted over $6000 in sponsorship, hundreds of visitors, featured a federal Senator as a keynote speaker and pulled together disparate user groups.\r\n\r\nUnfortunately Kathy was diagnosed with breast cancer a month after Software Freedom Day 2010 [2]. While undergoing chemo, she began planning BarCampGeelong, which was held in July 2011. Again, it was heralded a success.\r\n\r\nFairy dust and magic sprinkles were not the secret ingredients here; good planning, project management, stubbornness, determination, people skills and attention to detail *were*. High doses of dexamethasone steroids may have also played a small role [3].\r\n\r\nThis session will impart the skills required to replicate the enviable outcomes seen from Software Freedom Day and BarCampGeelong, and give other FOSS advocates the confidence and capabilities to run engaging, successful community events. \r\n\r\nIf you've ever thought about running a BarCamp, WordCamp, PyCon, Software Freedom Day, or even LCA in your home town, this presentation is for you!\r\n\r\nThe key takeaways will be;\r\n\r\nVISION - Understanding what you're trying to achieve\r\n\r\nMEASUREMENT OF OUTCOMES - What statistics or metrics will tell you whether you've achieved your objectives?\r\n\r\nVENUE AND FACILITIES - What to look for in a suitable venue - and what you should really be paying for it. \r\n\r\nFINANCIALS AND FUNDING - Understanding cost components of the event, and sources of funding. Government sources, filling in grant applications, budgets etc will be covered. Examples will be happily provided.\r\n\r\nA WINNING TEAM - How to find people willing to help, and understanding their skillset, level of commitment and capacity. Also covered will be strategies to help prevent burnout, and ensure you have a team to run the next event.\r\n\r\nMARKETING, PROMOTION and PUBLICITY - How to get the word of your event out there. This section will cover media releases, user group mailing, social media and other avenues.\r\n\r\nRISK MANAGEMENT - Managing and planning your way out of trouble and collecting information to manage risks for future event iterations.\r\n\r\nSPEAKERS and PRESENTATIONS - Where to find good speakers and how to assess engaging and compelling presentations. Also covered will be what to do when a presentation or a speaker is going off track. \r\n\r\nEVENT REGISTRATION - What works and what doesn't\r\n\r\nCATERING AND FOOD - Is it necessary and what should you look for?\r\n\r\nFOLLOW UP - Why it's so important to help build community, recognise participation and build assets such as photograhs and blog posts that help your case in the future. \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n1. http://softwarefreedomday.org/en/competition/winners-2010\r\n2. Software Freedom Day DOES NOT cause cancer :-)\r\n3. Joke. You don't need steroids to run a BarCamp. But they do help with chemo. \r\n\r\n\r\n","Title":"The best Software Freedom Day in the world - and how you can do it too!","URL":"http://lca2012.linux.org.au/schedule/151/view_talk","Event":67,"Start":"2012-01-17 10:30:00","Presenter_emails":"kathy@kathyreid.id.au","Presenters":"Kathy Reid","Duration":"0:50:00","Id":84,"Room Name":"Studio"},{"Description":"A 300,000 seat Linux deployment is nothing to sneeze at. What if those seats were actually children’s laps? By providing a flexible learning platform, OLPC Australia aims to create a sustainable and comprehensive programme to enhance opportunities for every child in remote Australia. What’s more, we plan to achieve this by 2014.\r\n\r\nIn focusing on the most remote areas of the continent, the mission is by no means easy. These areas are typically not economically viable for a business to service, hence the need for a not-for-profit in the space. Expertise for hardware and software is virtually non-existent. Settlements are small and spread very far apart. Environmental conditions, cultures and lifestyles vary wildly. They are very different worlds from the coastal cities where the bureaucracies are based.\r\n\r\nEven within communities, differences abound. Schools often stand in stark contrast to their surrounds. Government and business interests have also made their marks.\r\n\r\nThis talk will outline how OLPC Australia has developed a solution to suit Australian scenarios. Comparisons and contrasts will be made with other “computers in schools” programmes, OLPC deployments around the world and corporate IT projects.\r\n\r\nFor example, standard sysadmin practice typically mandates tight, centralised control over all systems and infrastructure. The OLPC Australia approach is the exact opposite. By promoting flexibility and ease of use, the programme can achieve sustainability by enabling management at the grass-roots level. The XO laptops themselves are built especially for education. They are extraordinarily rugged as well as being inexpensive. They are also totally repairable in the field, with minimal skill required. Training is conducted online, and an online community allows participants nationwide to share resources.\r\n\r\nKey to the ongoing success of the programme is active engagement with all stakeholders, and a recognition of the total cost of ownership over a five-year life cycle.","Title":"Australia’s Toughest Linux Deployment","URL":"http://lca2012.linux.org.au/schedule/149/view_talk","Event":100,"Start":"2012-01-19 14:20:00","Presenter_emails":"lists.sridhar@dhanapalan.com","Presenters":"Sridhar Dhanapalan","Duration":"0:50:00","Id":85,"Room Name":"Caro"},{"Description":"Even the most hardcore open source developers need to write documentation to go with their code. Whether it's design specifications, code comments, a reference manual, or the entire user guide, having good documentation can mean the difference between people using and contributing to your code, or throwing it away as a bad joke.\r\n\r\nLana has been writing open source technical documentation for over five years, and is now inviting you to come along and learn about why open source projects require the best possible documentation. During the first half of the tutorial, we'll go over why documentation is so important for open source projects, what the hallmarks of good writing are, and some examples of both good and bad writing. The second half of the tutorial will be applying the lessons we've learned to your own writing to improve it, and learning how to apply those skills to future writing tasks.\r\n\r\nBring a writing sample of your own for improvement. It can be documentation related to any current project you are working on: design and planning documents, end-user documentation, user interface or help text, or even commented code.","Title":"How good are you, really? Improving your technical writing skills.","URL":"http://lca2012.linux.org.au/schedule/61/view_talk","Event":69,"Start":"2012-01-18 15:40:00","Presenter_emails":"lanabrindley@gmail.com","Presenters":"Lana Brindley","Duration":"1:50:00","Id":86,"Room Name":"T101"},{"Description":"In January 2011 we moved the Mozilla crash reporting system from old creaky hardware in San Jose to a new shiny datacenter in Phoenix. This system contains more than 40TB of data in HBase, the Hadoop database, and PostgreSQL. The data collecting app has a requirement for close to 100% uptime. On top of that we have data processing, an API, and a webapp. After many months of work, the migration went seamlessly.\r\n\r\nIn this session we’ll talk about:\r\n\r\n- The checklist manifesto, reprised, and understanding the critical path\r\n\r\n- How to move all that data in a reasonable timeframe\r\n\r\n- The importance of devops culture in success\r\n\r\n- Automating packaging and configuration and how it will save you\r\n  \r\n- Understanding the difference between old and new platforms: correctness testing, load testing, and smoke testing\r\n\r\nAttendees should walk away with an outline of everything they’ll need to do to achieve a successful data center migration.\r\n","Title":"Moving Day: Migrating Big Data from A to B","URL":"http://lca2012.linux.org.au/schedule/140/view_talk","Event":70,"Start":"2012-01-17 15:40:00","Presenter_emails":"laura@mozilla.com,shyam@mozilla.com,jdow@mozilla.com","Presenters":"Laura Thomson,Shyam Mani,Justin Dow","Duration":"0:50:00","Id":87,"Room Name":"Caro"},{"Description":"<div><p>Message driven development can be hard due to the asynchronous nature\r\nof messaging. Messaging is also often still considered enterprisy\r\nstuff and therefor out of reach for the average developer. I'll show you\r\nhow to rewrite a monolithic web application into a scalable web app that\r\nuses <a href=\"http://www.rabbitmq.com/\">RabbitMQ</a> as the message queue. In the second step we introduce\r\n<a href=\"http://redis.io/\">Redis</a> as a caching layer and I will show you how to make a dog slow web\r\napp into a light wight and easy to maintain and scale app stack.</p>\r\n\r\n<p>Even though this talk will be mainly about AMQP based messaging I will\r\nbriefly talk about <a href=\"http://www.zeromq.org/\">ZeroMQ</a> and (if time permits and interest arises)\r\nabout the <a href=\"http://www.slideshare.net/norbu09/rabbitmq-couchdb-awesome\">workflow engine</a> I wrote on top of CouchDB and RabbitMQ. </p>\r\n\r\n<p>Even though I work mainly with Perl I successfully applied this method\r\nto other environments even as exotic as PHP based websites running Java\r\nbackends. This talk is intended for a technical audience that is\r\ninterested in web application development and scaling of web apps. It is\r\nalso interesting for anyone who is interested in messaging and message\r\ndriven development.</p></div>","Title":"scaling web applications with message queues","URL":"http://lca2012.linux.org.au/schedule/26/view_talk","Event":71,"Start":"2012-01-17 11:30:00","Presenter_emails":"lenz@springtimesoft.com","Presenters":"Lenz Gschwendtner","Duration":"0:50:00","Id":88,"Room Name":"T101"},{"Description":"Dave Neary of the GNOME community recently penned a post [0] on mentoring programs for FOSS communities, and his findings were a bit disheartening. Of all those mentees taken in under various mentoring programs, from Google Summer of Code to the Great Documentation Project, only about 1 in 4 became regular contributors to their mentor's projects. Based on these figures, it appears that mentoring programs are actually quite a poor return on investment and mentors would be better off simply doing the work themselves. \r\n\r\nRight? Well, sort of. Well, no, actually. \r\n\r\nIn this talk, Leslie Hawthorn argues that FOSS communities approach mentoring in a problematic manner. Our current approach focuses on the problem from the lens of software development, such as scaling our mentoring processes and measuring return on investment. Rather than focusing on these as measures of success, Leslie will discuss alternative ways to conceptualize the mentoring process and explore the broader social and cultural implications of mentoring folks in FOSS. She will also discuss alternative models for mentoring the next generation of contributors, including recommendations for implementing these models in your projects.\r\n\r\n[0] - http://blogs.gnome.org/bolsh/2011/05/31/effective-mentoring-programs/\r\n","Title":"Mentoring: We're Doing It Wrong","URL":"http://lca2012.linux.org.au/schedule/176/view_talk","Event":72,"Start":"2012-01-18 13:20:00","Presenter_emails":"leslie@osuosl.org","Presenters":"Leslie Hawthorn","Duration":"0:50:00","Id":89,"Room Name":"Studio"},{"Description":"Let's take a tour of the lower-level pieces of a functional Linux and see what is involved in making a smaller, possibly simpler system. Perhaps for installation on resource-constrained hardware; perhaps for restricted use systems; perhaps just for enjoyment and self-education.\r\n\r\nIt is \"well known\" that Linux runs on everything from super computers to toasters (well... maybe). For most people, however, running Linux on their desktop or laptop or even in the server room, they are typically running their distribution supplied kernel with distribution supplied libraries for basic interfaces and graphics.\r\n\r\nThis talk is aimed at intermediate userspace developers with an interest in expanding their knowledge of how Linux and associated support libraries work together.\r\n\r\nThe idea is to approach the questions:\r\n\r\n- How much can you throw out of the Linux kernel build (as in not configuring them in) and still have a useful system? What functionality is available after, for example, compiling a kernel with \"make allnoconfig\" and where you might want to add things.\r\n\r\n- What is the difference between a full-blown C library like GNU glibc, versus smaller libraries such as dietlibc and uClibc? What do you give up when moving from the larger to smaller versions? What does your favourite application really rely on and where are the built in assumptions.\r\n\r\n- How small (space-wise) can you go and still have a system that runs useful software, for whatever your own particular value of \"useful\" might be.\r\n\r\nI will not be covering low-level hardware interaction beyond pointing out that the kernel handles that. I will assume we can get the kernel to boot on whatever hardware is required and the talk explores what can be done from that point.\r\n\r\nBrief topic list:\r\n\r\n- Viewing the Linux kernel as input-output devices, memory management and process execution and working out what is strictly required in each area.\r\n\r\n- What happens after booting: why do you end up with a shell prompt or init scripts running?\r\n\r\n- \"Everything\" relies on a C library and graphical applications rely on something like an X server. What do these things really provide and how much can you give up?\r\n\r\n- Comparing and contrasting Linux and software stack on a desktop machine with Linux on an in-flight entertainment system or a phone.\r\n\r\n- Building and running tiny Linux systems for fun and education. No special hardware needed (kvm is your friend)!\r\n\r\n","Title":"What is in a tiny Linux installation","URL":"http://lca2012.linux.org.au/schedule/111/view_talk","Event":73,"Start":"2012-01-19 16:40:00","Presenter_emails":"malcolm.tredinnick@gmail.com","Presenters":"Malcolm Tredinnick","Duration":"0:50:00","Id":90,"Room Name":"Caro"},{"Description":"Despite its immensity, the Pacific can feel like a tiny place, fraught\nwith small-town, identity-driven politics. Isolated and outnumbered by\nconsultants, advisors and family- or island-based alliances,\ndecision-makers often acquiesce to ideas they might not share.\n\nPolicy Circles aims to change that. We're building a distributable\nsocial networking app that emphasises frank, confidential discussion\nwhich in turn feeds public debate. Users can take on a single,\npersistent online persona to present their honest views without\ncompromising their real life identity.\n\nWith curated information streams supplemented by user-submitted content,\nwe'll supply Pacific decision-makers with appropriate, useful research\nand opinion, feeding open, honest discussion, free from undue pressure\nfrom inside and out.\n\nPolicy Circles aims to fill that gap by offering a platform that is open to those dealing with policy development in the islands but also holds a public section that publishes profiles about the participating countries, the organizations and the various people involved in policy development.\n\nPolicy Circles is built on top of CouchDB and Mojolicious and was bootstrapped in Vanuatu in October 2011. It is driven by the Pacific Institute for Public Policy in Port Vila and we try to reach participation of all pacific islands by 2012. The project is unique in the way it tries to address both, the need for public discussion and the need to protect privacy in these discussions.","Title":"POLICY CIRCLES - Freedom to Think Aloud","URL":"http://lca2012.linux.org.au/schedule/214/view_talk","Event":109,"Start":"2012-01-17 15:40:00","Presenter_emails":"dmcgarry@imagicity.com","Presenters":"Dan McGarry","Duration":"0:50:00","Id":91,"Room Name":"T101"},{"Description":"The Android Open Accessory Protocol makes it possible for you to\r\ncreate custom Arduino-based accessories for your Android phone or\r\ntablet.\r\n\r\nAttend this session to learn how to get started, the hardware &amp;\r\nsoftware required and how Handbag makes development easier.\r\n\r\nContent will be useful whether you have previous Android or Arduino\r\nexperience or neither.\r\n\r\nHave you ever wished your phone had just one more hardware feature?\r\n\r\nPerhaps you've thought of the ideal accessory for your phone: a\r\nspecialist input method, helpful output device or custom dock.\r\n\r\nUntil recently your options for creating your own cell phone\r\naccessories were limited or non-existent.\r\n\r\nWith the announcement of the \"Android Open Accessory Protocol (AOAP)\" (http://developer.android.com/guide/topics/usb/adk.html),\r\nGoogle provided an officially supported way to create Arduino-based\r\naccessories for Android phones and tablets.\r\n\r\nThis session will provide the information you'll need to start to\r\ncreate Android accessories--the content will be useful whether you\r\nhave previous Android or Arduino experience or neither.\r\n\r\nWhen you attend you will:\r\n\r\n * See examples of accessories people have created with the AOAP.\r\n\r\n * Gain an overview of how the AOAP works.\r\n\r\n * Learn which Android devices and software are AOAP-compatible.\r\n\r\n * See which Arduino boards and shields are needed to create an accessory.\r\n\r\n * Learn about the Arduino libraries you'll need to install and how to use them.\r\n\r\n * Gain an overview of the steps needed to develop an AOAP Android app.\r\n\r\n * Learn how the open source \"Handbag\" (http://handbagdevices.com/) project eliminates the need to write Android code and lets you create an accessory with only an Arduino sketch.\r\n\r\nThe session is presented by the creator of \"Handbag\" (http://handbagdevices.com/) and the\r\n\"dual-display Nexus One project\" (http://www.labradoc.com/i/follower/p/dual-screen-nexus-one) as seen on \"Make\" (http://blog.makezine.com/archive/2011/07/read-your-text-messages-while-you-play-games-on-a-nexus-one.html), \"Hack a Day\" (http://hackaday.com/2011/07/01/external-text-display-for-nexus-one/) and \"Engadget\" (http://www.engadget.com/2011/07/02/modder-outfits-nexus-one-with-an-arduino-powered-pager-style-di).\r\n\r\nYou will leave the session inspired by what's possible and with the\r\nknowledge needed to start to develop Android accessories with Arduino.","Title":"Android Accessories Made Easy With Arduino","URL":"http://lca2012.linux.org.au/schedule/133/view_talk","Event":75,"Start":"2012-01-19 13:20:00","Presenter_emails":"lca2012@rancidbacon.com","Presenters":"Philip Lindsay","Duration":"0:50:00","Id":92,"Room Name":"C001"},{"Description":"Bringing up the ARM archive in Ubuntu has had many challenges, lack of hardware, porting code, bringing up SMP, and now almost 3 years later going into the server space.\r\n\r\nThis presentation will quickly review the challenges to bringing up a binary distribution, talk more extensively about building a custom ARM build cluster, validating and fixing ARM SMP issues (shocking some code simply assumed that there would never be SMP ARM CPU's).  What is devicetree and why it's so important to many distributions (and others), not just Ubuntu and how we are using it. Finally we will look at ARM Server, no not the ARM home server, the ARM Enterprise server.  Crazy isn't it?  Who would have thought a cell phone embedded processor would end up in the high end server space!!\r\n","Title":"Ubuntu ARM from netbook to Server, the journey from the beginning and where it's going","URL":"http://lca2012.linux.org.au/schedule/179/view_talk","Event":39,"Start":"2012-01-18 13:20:00","Presenter_emails":"davidm@them.com","Presenters":"David Mandala","Duration":"0:50:00","Id":93,"Room Name":"Caro"},{"Description":"We all want IPv6, because the sky is falling, and many of us have gone back to the future and are trialling IPv6 already.  This is a good thing.  But many of us want our NodePonies too - we want those v6 addresses reverse mapped.  There's no way your ISP is going to handle all those reverse mappings manually like they did for v4 - there's around  2^72 entries per customer!  What do you use to solve your problem - use pymds!\r\n\r\nThis presentation is a real-world case study of how a successful Australian ISP - Internode - took a simple open-source DNS server and made it part of their production DNS environment.  As we fall down the rabbit hole we'll discuss:\r\n\r\n* Why people want all IPv6 addresses to have reverse mappings\r\n* Solutions that were ruled out (eg. BIND's \"GENERATE\" macro)\r\n* Why pymds was picked (ie., rapid prototyping is better than weeks of effort).\r\n* Naming/formatting options we went through for what the reverses should look like\r\n* Options for integrating it into our main DNS zones.\r\n* How can we easily override the automatic generation, without complicating the codebase.\r\n* Pitfalls we expect to see\r\n* Future evolution possibilities, competing projects\r\n\r\n[Note: Our modifications to pymds are not yet available publicly, but will be by the conference - promise!  We know that's not ideal, but our legion of code ponies are busily cleaning up the source before releasing - internal approval to release has already been granted]\r\n\r\nAppropriate for Sysadmins, advanced users, and people playing with IPv6 in their basement.","Title":"IPv6 Dynamic Reverse Mapping - the magic, misery and mayhem","URL":"http://lca2012.linux.org.au/schedule/168/view_talk","Event":77,"Start":"2012-01-17 14:20:00","Presenter_emails":"mibus@mibus.org","Presenters":"Robert Mibus","Duration":"0:50:00","Id":94,"Room Name":"C001"},{"Description":"The Serval Project has as a core tenet the concept that Communication is a Human Right. The project is focused on the development of open source software that uses mobile devices to create a resilient mesh network. The network is designed to support communication tools that are infrastructure independent, while integrating with existing infrastructure where possible. This means we can provide communication capabilities where it may not be possible otherwise.\r\n\r\nThe need to be infrastructure independent means we run into issues such as : how do we install the software at times of need without supporting infrastructure. the solution we have come up with is Rhizome.\r\n\r\nSome of you are already going - why Rhizome as a name? Well, besides the fact it is desperately hard to come up with an original recursive name nowadays, we wanted something that would reflect how it works. It is almost viral in nature  but we thought calling it Virus was probably not going to make it all that popular. So we went fungal instead. \r\nRhizome comes from an Ancient Greek word that means ‘mass of roots’. In botanical terms, it is the horizontal stem of a plant that is usually found underground, sending out shoots &amp; roots from nodes. The technology that forms the basis of Rhizome in the Serval Project Software serves a similar purpose for the resilient mesh network. Hence the strange name!\r\n\r\nEach mobile device that has the Serval Project mesh software installed on it can, using Rhizome, offer the software wirelessly to another device. This is known as the donor device. A second device, known as the recipient, can connect to the donor device wirelessly and download a copy of the installation package. Multiple devices can copy the  software at a time. Once copied the user can follow the directions displayed on the donor device to install and configure the software on the recipient device.\r\n\r\nIn this way one device becomes two, two devices become four and so on. A relatively small network, even one that starts from a single device, can grow and support a large number of users without the need for a centralised software distribution server or other infrastructure. In future releases the Rhizome technology will support the distribution of other data and files once the device is part of the network. \r\n\r\nThe resilience of a mesh network is directly proportional to the number of nodes on the network. The more nodes on the network, the more resilient the network becomes. The challenge therefore is to distribute the Serval Project software to new devices in such a way that doesn’t rely on existing infrastructure, or on access to any single node on the network. \r\n\r\nThis presentation will outline some of the challenges in developing this technology, the lessons learned in developing Android based software as well as explore future directions and capabilities of the technology. Lastly the use case of Rhizome as part of the Serval Field Communications Kit for disaster response will be explored.","Title":"The Serval Project presents Rhizome - Self Replicating Software and Data Distribution in Resilient Mesh Networks ","URL":"http://lca2012.linux.org.au/schedule/123/view_talk","Event":78,"Start":"2012-01-18 15:40:00","Presenter_emails":"corey.wallis@servalproject.org,jeremy.lakeman@gmail.com","Presenters":"Corey Wallis,Jeremy Lakeman","Duration":"0:50:00","Id":95,"Room Name":"Studio"},{"Description":"The 'ls' binary on the original release of Unix (version 6) was 4920 bytes long.  Thirty six years later, 'ls' on Ubuntu is 105776 bytes.  Is this the laziness of modern coders?  Increasing features?  Does 'cat' really now do 313 times more stuff, or is there something else going on?\r\n\r\nGrab your sandals and/or fake beards as our two brave coders tear apart a handful of common UNIX utilties which they grew up alongside, with adult supervision from a genuine greybeard.  We'll pit ancient against modern, both source and binaries, and provide deep insight into how we got here.\r\n\r\n(With Matt Evans and Alisdair Rawsthorne)","Title":"Bloat: How and Why UNIX Grew Up (and Out)","URL":"http://lca2012.linux.org.au/schedule/147/view_talk","Event":79,"Start":"2012-01-20 10:30:00","Presenter_emails":"rusty@rustcorp.com.au,matt@ozlabs.org","Presenters":"Rusty Russell,Matt Evans","Duration":"0:50:00","Id":97,"Room Name":"Caro"},{"Description":"Taking a look at the many layers of caching in the modern webstack can lead to some interesting optimizations. We know that raid card caches, disk caches and CPU caches all exist at the hardware level, but how do they interact with database caching, application code caching and rendered page caching. Where are the redundancies and where is the most optimal location for your services to cache? Are you risking data integrity by using both disk and raid card caching? Is there a similar risk in using both filesystem and database caching? These are hard won lessons if you have to learn them during an outage. they can be avoided with some forethought and benchmarking. I’ll call out the many layers where data is cached and talk about some of the risks and potential performance gains that we’ve found by selectively disabling and adding particular caching layers.","Title":"where is your data cached and where should it be cached","URL":"http://lca2012.linux.org.au/schedule/70/view_talk","Event":80,"Start":"2012-01-17 16:40:00","Presenter_emails":"sarah.novotny@gmail.com","Presenters":"sarah Novotny","Duration":"0:50:00","Id":98,"Room Name":"Caro"},{"Description":"This is a near two hour course on how to design a Printed Circuit Board (PCB) from scratch using only Free and Open Source Software. The student will learn skills such as how to design and layout a board that will work the first time (without bursting into flame). They'll learn how to minimise the manufacturing cost of their new board and how to navigate the maze of manufacturing options. \r\n\r\nAt the same time, they'll learn how to produce a board that is not just an end product but a platform for themselves and the community to further hack on. The only thing more rewarding than a working printed circuit board is seeing others do things with it that you had never even considered.\r\n","Title":"Design your own Printed Circuit Board using FOSS","URL":"http://lca2012.linux.org.au/schedule/33/view_talk","Event":81,"Start":"2012-01-18 13:20:00","Presenter_emails":"scottfinneran@yahoo.com.au","Presenters":"Scott Finneran","Duration":"1:50:00","Id":99,"Room Name":"T101"},{"Description":"In an ideal world, code would have complete test coverage, releases would be seamless and databases wouldn’t require downtimes to upgrade. The fact is, most companies still have to manage systems upgrades and code deployment that includes downtime. This talk is for you.\r\n\r\nMaintenance windows are rarely wanted, but frequently needed. And sometimes things go horribly wrong.\r\n\r\nThis talk will teach you how to plan for the worst, minimize risk and recover gracefully from failure.\r\n\r\nElements to successful downtimes include: proper testing, automated checks for success, and complete rollback plans, and a timeline. We’ll go over useful tools for keeping track of what is going on before, during and after a downtime, and talk through good and bad communication for employees and customers.\r\n\r\nWe’ll also talk about how non-technical people can evaluate technical change. And how having the right stakeholders involved from the beginning of the planning process reduces risk.\r\n\r\nStories to illustrate success and failure will come from Selena Deckelmann’s 15 years in education, public and private sectors, as a consultant, DBA and IT manager.  Additional examples ","Title":"Mistakes were made","URL":"http://lca2012.linux.org.au/schedule/131/view_talk","Event":82,"Start":"2012-01-17 13:20:00","Presenter_emails":"selenamarie@gmail.com","Presenters":"Selena Deckelmann","Duration":"0:50:00","Id":100,"Room Name":"C001"},{"Description":"This talk will discuss the current state of the World Wide Web as a platform for the development and deployment of applications, providing answers to the following questions:\n* How does web application development differ from the development of traditional desktop applications? \n* How easy is it to shift from one environment to the other?\n* What pieces are missing from the web in this regard?\n* What does the web provide that desktop application environments do not?\n* is it possible for an application to be deployed in both environments simultaneously?\n\nAttendees will take away:\n* an understanding of the fundamental components of the state-of-the-art of the web platform.\n* when it makes sense to consider writing a web app instead of a desktop app.\n* pointers to the basic technologies required to make rich, desktop-like web applications.","Title":"The Web as an Application Development Platform","URL":"http://lca2012.linux.org.au/schedule/119/view_talk","Event":83,"Start":"2012-01-18 11:30:00","Presenter_emails":"shane.stephens@gmail.com,mikelawther@google.com","Presenters":"Shane Stephens,Mike Lawther","Duration":"0:50:00","Id":101,"Room Name":"Caro"},{"Description":"Presentation by Silvia Pfeiffer and Alice Boxhall\n\nThis talk will introduce some of the background any developer creating a web application should have when considering accessibility.\n\nThere are many simple, but important things that we can do when developing Web applications that will have a massive impact on their accessibility. At the same time, they help us make our Web pages more navigable and usable.\n\nThe same techniques which will make a banking application easier to use for a blind user will also benefit someone accessing the site using a mobile phone or tablet PC. An email application with keyboard shortcuts will be more usable for both motor impaired users, and power users who prefer to avoid switching to the mouse. Multimedia applications with captions may be used by people who are deaf or simply situationally unable to play audio.\n\nWe will cover:\n* The tools and techniques people with visual impairments use to interact with, navigate through and consume web pages on different platforms\n* Some key techniques to improve the accessibility of rich, Javascript-heavy web applications, including tools to assist in accessibility testing\n* The systems that take a snippet of HTML from the Web page through the browser accessibility APIs to screen readers and braille devices\nThe latest accessibility-related developments in HTML5, in particular around multimedia elements.\n\n\nWe’ll also take an example of an existing Web application and show some key approaches to make it accessible.\n\nKey technologies covered: ORCA, NVDA, JAWS, VoiceOver, ChromeVox, ChromeShades, WAI-ARIA, accessible forms, captions, audio descriptions, IAccessible2, UIAutomation, ATK/AT-API, NSAccessible, MSAA\n\n\nAlice is part of the Google Chrome development team focusing on implementing accessibility support in the browser. Silvia is active in the HTML5 Working Groups for audio and video accessibility and is helping YouTube become more accessible.","Title":"Developing accessible web applications - how hard can it be?","URL":"http://lca2012.linux.org.au/schedule/88/view_talk","Event":84,"Start":"2012-01-18 10:30:00","Presenter_emails":"silviapfeiffer1@gmail.com,appletea@gmail.com","Presenters":"Silvia Pfeiffer,Alice Boxhall","Duration":"0:50:00","Id":102,"Room Name":"Caro"},{"Description":"Over recent years there has been increased interest in the use of virtualisation in many aspects of computing including the data-center. As a result virtualised networking has become more and more important as mission-critical services are deployed in virtualised environments. VPS, SaaS, Cloud are all part of the resulting buzzword soup. Open vSwitch seeks to provide virtual networking capabilities for edge-nodes that extends beyond the current bridging implementation in the Linux kernel. It implements a fast datapath in the kernel while most of the intelligence and code lives in the controller in user-space. This presentation will give an overview of the internal architecture of Open vSwitch and examine a number of its capabilities. It is intended for an audience with an interest in virtualisation and networking.","Title":"An Introduction to Open vSwitch","URL":"http://lca2012.linux.org.au/schedule/204/view_talk","Event":85,"Start":"2012-01-20 11:30:00","Presenter_emails":"simon@horms.net","Presenters":"Simon Horman","Duration":"0:50:00","Id":103,"Room Name":"C001"},{"Description":"The Drizzle database had its first stable GA release at the start of 2011. Since then we have been working on a few features taht directly relate to be able to easily produce applications that can scale.\r\n\r\n1) True mulitenancy.\r\n  running a database server in a Virtual Machine is an instant way to kill performance. A VM running a database server for each user doesn't scale.\r\n  Drizzle now has a concept of CATALOGs, this can give each tenant their own namespace for databases, tables and users.\r\n\r\n2) Multi-master\r\n  Drizzle has the ability to replicate from multiple masters, enabling you to pull all your shards into one database for analytics and cross-shard queries.\r\n\r\n3) Sharding\r\n  The Drizzle client library (libdrizzle - which can speak the MySQL protocol to Drizzle and MySQL servers) has new features to help with sharding, being able to connect to a shard, a read-only replica of a shard as well as supporting moving shards between machines and adding more capacity.","Title":"Multi-tenancy, multi-master, Sharding, scaling and analytics with Drizzle","URL":"http://lca2012.linux.org.au/schedule/109/view_talk","Event":86,"Start":"2012-01-17 16:40:00","Presenter_emails":"stewart@flamingspork.com","Presenters":"Stewart Smith","Duration":"0:50:00","Id":104,"Room Name":"T101"},{"Description":"For the last 6 months Tim Ansell has been trying to figure out a live streaming solution for the local user groups he help out with (including Sydney Linux User Group, Sydney Python User Group and Functional Programming Group). \r\n\r\nThe solution had to be turn key and support the latest HTML5 streaming as well as fall back to flash for legacy users. Users participating at home should be part of the action, including the ability to ask questions and heckle!\r\n\r\nThe system has been now used for 3 months and successfully streaming the events to numerous users. Tim will describe the set up that he settled on which uses an open source stack and how to reproduce it for your own user group.\r\n\r\nThis talk will cover the following technologies;\r\n * Flumotion and gstreamer, the backbone of the streaming system.\r\n * Flowplayer and jwplayer, the front end UI provided to users.\r\n * A little bit of AppEngine to serve the front end UI.\r\n * Set up scripts for deploying to your favorite cloud hosting provider such as Amazon AWS.\r\n * Some custom code to integrate IRC, twitter and the player into one UI. \r\n","Title":"Making video streaming interactive, heckling user groups from the clouds!","URL":"http://lca2012.linux.org.au/schedule/56/view_talk","Event":88,"Start":"2012-01-19 10:30:00","Presenter_emails":"mithro@mithis.com","Presenters":"Tim Ansell","Duration":"0:50:00","Id":106,"Room Name":"Studio"},{"Description":"Building a secure system is an important but challenging task. System builders, who have traditionally focused on performance, power, and cost, must today be equally concerned with hardening their system against the myriad of hardware and software vulnerabilities that lead to exploits. In this short tutorial, we will first examine a wide variety of hardware and software exploits that exist today. Then, we will explore development techniques (both preemptive and reactive) that can protect systems from being hacked.  Special focus is given toward open-source tools that exist today that can help developers produce more secure software.\r\n\r\nTutorial Outline:\r\n\r\n  Part 1: Security Basics\r\n  Part 2: Security Exploit Prevention Techniques\r\n  Part 3: Side-Channel Attacks and Protections\r\n  Part 4: Tools for Secure Computing\r\n  Part 5: Security Vulnerability Analysis\r\n\r\nThis is a joint tutorial with Valeria Bertacco, also from University of Michigan","Title":"A (Mostly) Gentle Introduction to Computer Security","URL":"http://lca2012.linux.org.au/schedule/181/view_talk","Event":90,"Start":"2012-01-19 13:20:00","Presenter_emails":"austin@umich.edu","Presenters":"Todd Austin","Duration":"1:50:00","Id":108,"Room Name":"T101"},{"Description":"Optimizing web pages has historically been focused on what's happening on the server, and more recently how resources being sent to the client are compressed and cached. Some have even resorted to clever JavaScript packing maneuvers, extreme image spriting and even micro-optimization of CSS selectors. Unfortunately nearly all of these performance improvements come at the cost of reducing development efficiency, and yield only minor gains. Puling from practical experience implementing and deploying a variety of features for Wikipedia, Trevor and Roan applied creative ideas to fundamental problems and came up with a set of techniques that have proven themselves to significantly improve performance.","Title":"Low-hanging Fruit vs. Micro-optimization, Creative Techniques for Loading Web Pages Faster","URL":"http://lca2012.linux.org.au/schedule/177/view_talk","Event":91,"Start":"2012-01-17 13:20:00","Presenter_emails":"tparscal@wikimedia.org","Presenters":"Trevor Parscal","Duration":"0:50:00","Id":109,"Room Name":"Studio"},{"Description":"For any computing system to be secure, both hardware and software have to be trusted. If the hardware layer in a secure system is compromised, not only it is possible to extract secret information about the software, but it is also extremely difficult for the software to detect that an attack is underway. \r\n\r\nThis talk will detail a complete end-to-end security attack to on a microprocessor system and will demonstrate how hardware vulnerabilities can be exploited to target systems that are software-secure.  Specifically, we present a side-channel attack to the RSA signature algorithm by leveraging transient hardware faults at the server. Faults may be induced via voltage-supply variation, temperature variation, injection of single-event faults, etc. When affected by faults, the server produces erroneous RSA signatures, which it returns to the client. Once a sufficient number of erroneously signed messages is collected at the client end, we filter those that can leak private key information and we use them to extract the private key. We developed an algorithm to extract the private RSA key from messages affected by single-bit faults in the multiplication during Fixed Window Exponentiation (FWE), that is, the standard exponentiation algorithm used in OpenSSL during RSA signing. Our algorithm was inspired by a similar solution developed by Boneh, et al. for the Chinese Remainder Theorem (CRT) [D. Boneh, R. DeMillo, and R. Lipton. On the importance of eliminating errors in cryptographic computations. Journal of Cryptology, Dec 2001], an algorithm particularly prone to attacks.  Depending of the window size used in the encryption algorithm, it is possible to extract 4-6 bits of the private key from an erroneously signed message. \r\n\r\nOur attack is perpetrated using a FPGA platform implementing a SPARC-based microprocessor running unmodified Linux and the OpenSSL authentication library. The server provides 1024-bits RSA authentication to a client we control via Ethernet connection. Faults are injected by inducing variations in the supply voltage on the FPGA platform or by subjecting the server to high temperatures. Our client collects a few thousands signed messages, which we transfer to an 80-machines computing pool to compute the private RSA key in less than 100 hours.\r\n\r\nNote that our attack does not require access to the victim system’s internal components, but simply proximity to it. Moreover, it is conceivable that an attack leveraging solely high temperatures can be carried out on machines in a remote poorly-conditioned server room. Finally, the attack does not leave any trail of the attack in the victim machine, and thus it cannot be detected.\r\n","Title":"Torturing OpenSSL","URL":"http://lca2012.linux.org.au/schedule/169/view_talk","Event":92,"Start":"2012-01-19 10:30:00","Presenter_emails":"valeria@umich.edu","Presenters":"Valeria Bertacco","Duration":"0:50:00","Id":110,"Room Name":"Caro"},{"Description":"Last year at LCA 2011, Mary Gardiner asked for a show of hands in response to the question “who has heard that women are underrepresented in open source?” Unsurprisingly, almost everybody had. But many people’s knowledge stops there, particularly when it comes to attempts to change this. It can feel like nothing is changing, that there’s a lot of talk and no action. However, there are increasingly vibrant, active and successful initiatives to involve or further include women in open source and technology.\r\n\r\nThis talk will present a survey of groups of and for women in open technology and culture, and their success stories. What is the current state of women in open source, open data, Wikipedia, and similar areas worldwide?  How many women are involved and what are they doing?  Who's working to increase the participation of women and how?  How can you help? We’ll introduce you to women learning about, and leading, open technology and culture in groups and projects as far-flung as LinuxChix’s chapter in Brazil, Python workshops in Boston, and Wikichix meetups at Wikimania conferences around the world.\r\n\r\nThis talk will be jointly presented by Valerie Aurora and Mary Gardiner of the Ada Initiative.","Title":"Women in open technology and culture worldwide","URL":"http://lca2012.linux.org.au/schedule/116/view_talk","Event":93,"Start":"2012-01-19 13:20:00","Presenter_emails":"valerie@adainitiative.org,mary@puzzling.org","Presenters":"Valerie Aurora,Mary Gardiner","Duration":"0:50:00","Id":111,"Room Name":"Caro"},{"Description":"Arduino is everywhere, but so is electronic junk.  Got a project in mind?  Take something you already have and repurpose it instead.  Make it into something more interesting, for free!  Learn how it works, see what it's really capable of and save it from landfill.\r\n\r\nIn this talk, we'll journey through some examples of common electronic devices to find out:\r\n- Why things are hackable, which useful interfaces they may have and how to use them.\r\n- Why things aren't -- proprietary killjoys and their barriers to hacking.\r\n- Why it's fun to subvert electronic objects into doing things they weren't designed for.\r\n\r\nRe-purposing is an art, but whether you re-use a router to mow the lawn with Python or use Linux to make sure your cat is fed, you can make something more fun for less cost with things you already have.  Peel off that warranty sticker and grab the screwdriver...\r\n","Title":"Hack everything: re-purposing everyday devices","URL":"http://lca2012.linux.org.au/schedule/150/view_talk","Event":94,"Start":"2012-01-19 14:20:00","Presenter_emails":"matt@ozlabs.org","Presenters":"Matt Evans","Duration":"0:50:00","Id":112,"Room Name":"C001"},{"Description":"Being \"social\" is becoming more and more important for applications, especially in a mobile environment. Almost every distribution already provides the needed infrastructure for enabling applications to connect to the outer world: Telepathy provides your desktop with instant messaging features, and Libsocialweb brings social networking in your digital pocket. Both of them feature a client library (based upon GLib and Qt) to integrate their features inside any application. The talk will showcase Qt's client libraries.\r\n\r\nSee how your own project can gain social features in a matter of minutes and without changing your existing logic: Multi-user interaction, real-time sharing, and much more; lots of cool features are just a few lines of code away.\r\n\r\nAfter a brief introduction to Telepathy, the talk will focus on the new high-level APIs for Tubes and Libsocialweb. The audience will be first made familiar with the Tube concept, and later it will be explained how Telepathy-Qt4 makes tube usage extremely easy. It will be shown how Tp-qt4's API lets developers who are already using a networking logic or a DBus logic in their application easily make it Tubes-ready without changing a single line of code, thanks to tp-qt4's capability of generating native Qt objects such as QIODevice from a tube.\r\n\r\nOn the other hand, it will be shown how it is possible to fetch or publish state updates to/from sites such as Twitter and Facebook with just a few lines of code. Throughout the talk, lots of demos and code examples will be shown, making the audience ready to kickstart their own social-enabled application.","Title":"Creating social applications with Telepathy and Libsocialweb","URL":"http://lca2012.linux.org.au/schedule/167/view_talk","Event":95,"Start":"2012-01-20 10:30:00","Presenter_emails":"dario.freddi@collabora.com","Presenters":"Dario Freddi","Duration":"0:50:00","Id":113,"Room Name":"T101"},{"Description":"Linux hasn't won the desktop war (yet!) but it has taken over the world one pocket at a time. Android-based mobile devices now outnumber all other Linux machines on the planet by a huge number.\r\n\r\nThis is an enormous opportunity for FOSS developers. We have the capability of developing and deploying on all those devices with Open tools and no gatekeepers. Now with the release of the Android Open Accessory Development Kit we have a bridge to connect them to other physical devices and peripherals around us. The software toolchain is open, the physical interface is just USB, and even the hardware reference designs for example peripherals are available under Open Hardware licenses.\r\n\r\nThis talk will explain how to get started with the necessary hardware platform and software toolchain to design your own peripherals that can plug straight into your Android phone or tablet.\r\n\r\nIt will also demonstrate some of the possibilities connecting Android-based phones and tablets to external devices such as robotics, telepresence, automotive projects, and home automation.","Title":"World domination and party tricks with the Android Open ADK","URL":"http://lca2012.linux.org.au/schedule/134/view_talk","Event":96,"Start":"2012-01-19 11:30:00","Presenter_emails":"jon@oxer.com.au","Presenters":"Jonathan Oxer","Duration":"0:50:00","Id":114,"Room Name":"C001"},{"Description":"State-of-the-art tools in dynamic program security vulnerability\r\nanalysis, such as Valgrind, Sage or Testudo, require the ability to\r\nefficiently monitor program variable accesses.  The traditional\r\napproach of using binary instrumentation or mprotect can slow\r\nanalyzed programs by orders of magnitude.  In this talk, I'll present\r\na open-source kernel-level solution that implements unlimited\r\nbyte-level watchpoints with significantly less slowdown.  Our\r\napproach utilizes a run-time loadable kernel module that works with\r\nunmodified recent versions of the Linux kernel.  We've shown that our\r\nwatchpoint facility serves security vulnerability analysis well, as\r\nwell as program debugging, software-based transactional memory, and\r\nother applications.  At the heart of our watchpoint technology is\r\nefficient kernel-level shadow paging and judicious use of instruction\r\ninterpretation to avoid painfully slow single-step invocations.\r\nWe're looking for new applications and new users!","Title":"1,000,000 Watchpoints, 20 Applications, 1 Driver, 0 Kernel Modifications","URL":"http://lca2012.linux.org.au/schedule/105/view_talk","Event":89,"Start":"2012-01-18 14:20:00","Presenter_emails":"austin@umich.edu","Presenters":"Todd Austin","Duration":"0:50:00","Id":115,"Room Name":"Caro"},{"Description":"","Title":"Penguin Dinner","Event":97,"Start":"2012-01-19 18:30:00","Duration":"3:30:00","Id":116,"Room Name":"Mercure Ballarat"},{"Description":"","Title":"Speakers Dinner","Event":99,"Start":"2012-01-17 18:30:00","Duration":"4:30:00","Id":117,"Room Name":"Sovereign Hill"},{"Description":"","Title":"Professional Delegates Networking Session","Event":98,"Start":"2012-01-18 18:45:00","Duration":"3:15:00","Id":118,"Room Name":"Ballarat Mining Exchange"},{"Description":"","Title":"Linux Australia AGM","Event":103,"Start":"2012-01-18 17:30:00","Duration":"1:00:00","Id":119,"Room Name":"Caro"},{"Description":"","Title":"Lightning talks","Event":101,"Start":"2012-01-20 15:40:00","Duration":"0:50:00","Id":120,"Room Name":"Caro"},{"Description":"","Title":"Conference Close","Event":104,"Start":"2012-01-20 16:40:00","Duration":"0:50:00","Id":121,"Room Name":"Caro"},{"Description":"","Title":"Ballarat Observatory Tour","Event":105,"Start":"2012-01-20 19:30:00","Duration":"2:30:00","Id":122,"Room Name":"Caro"},{"Description":"","Title":"Conference Opening","Event":107,"Start":"2012-01-16 09:30:00","Duration":"0:30:00","Id":123,"Room Name":"Caro"},{"Description":"","Title":"Afternoon Tea","Event":11,"Start":"2012-01-16 15:10:00","Duration":"0:30:00","Id":124,"Room Name":"Cafeteria"},{"Description":"","Title":"Lunch","Event":18,"Start":"2012-01-16 12:20:00","Duration":"1:00:00","Id":126,"Room Name":"Cafeteria"},{"Description":"","Title":"High Availability and Distributed Storage by Tim Serong","Event":2,"Start":"2012-01-16 13:20:00","Duration":"1:50:00","Id":127,"Room Name":"C001"},{"Description":"","Title":"Arduino Miniconf by Jon Oxer and Andy Gelme","Event":4,"Start":"2012-01-16 13:20:00","Duration":"1:50:00","Id":129,"Room Name":"Studio"},{"Description":"","Title":"Open Programming Miniconf by Christopher Neugebauer","Event":5,"Start":"2012-01-16 13:20:00","Duration":"1:50:00","Id":130,"Room Name":"T101"},{"Description":"","Title":"Business of Open Source Miniconf by Martin Michlmayr","Event":7,"Start":"2012-01-16 13:20:00","Duration":"1:50:00","Id":131,"Room Name":"T102"},{"Description":"","Title":"Browser Miniconf by Shane Stephens and Cameron McCormack","Event":9,"Start":"2012-01-16 13:20:00","Duration":"1:50:00","Id":132,"Room Name":"Studio 3"},{"Description":"","Title":"Multimedia and Music Miniconf by Jonathan Woithe","Event":3,"Start":"2012-01-16 13:20:00","Duration":"1:50:00","Id":133,"Room Name":"Studio 1"},{"Description":"","Title":"Haecksen by Lana Brindley","Event":1,"Start":"2012-01-16 13:20:00","Duration":"1:50:00","Id":134,"Room Name":"Studio 2"},{"Description":"","Title":"High Availability and Distributed Storage by Tim Serong","Event":2,"Start":"2012-01-16 15:40:00","Duration":"1:50:00","Id":136,"Room Name":"C001"},{"Description":"","Title":"Arduino Miniconf by Jon Oxer and Andy Gelme","Event":4,"Start":"2012-01-16 15:40:00","Duration":"1:50:00","Id":137,"Room Name":"Studio"},{"Description":"","Title":"Open Programming Miniconf by Christopher Neugebauer","Event":5,"Start":"2012-01-16 15:40:00","Duration":"1:50:00","Id":138,"Room Name":"T101"},{"Description":"","Title":"Business of Open Source Miniconf by Martin Michlmayr","Event":7,"Start":"2012-01-16 15:40:00","Duration":"1:50:00","Id":139,"Room Name":"T102"},{"Description":"","Title":"Browser Miniconf by Shane Stephens and Cameron McCormack","Event":9,"Start":"2012-01-16 15:40:00","Duration":"1:50:00","Id":140,"Room Name":"Studio 3"},{"Description":"","Title":"Multimedia and Music Miniconf by Jonathan Woithe","Event":3,"Start":"2012-01-16 15:40:00","Duration":"1:50:00","Id":141,"Room Name":"Studio 1"},{"Description":"","Title":"Haecksen by Lana Brindley","Event":1,"Start":"2012-01-16 15:40:00","Duration":"1:50:00","Id":142,"Room Name":"Studio 2"},{"Description":"","Title":"Speakers' Briefing Session - meet at Caro Founders' Theatre","Event":108,"Start":"2012-01-16 18:00:00","Duration":"1:00:00","Id":143,"Room Name":"Caro"},{"Description":"","Title":"Sysadmin Miniconf by Simon Lyall","Event":6,"Start":"2012-01-16 10:30:00","Duration":"1:50:00","Id":144,"Room Name":"Caro"},{"Description":"","Title":"Sysadmin Miniconf by Simon Lyall","Event":6,"Start":"2012-01-16 13:20:00","Duration":"1:50:00","Id":145,"Room Name":"Caro"},{"Description":"","Title":"Sysadmin Miniconf by Simon Lyall","Event":6,"Start":"2012-01-16 15:40:00","Duration":"1:50:00","Id":146,"Room Name":"Caro"},{"Description":"The thrilling adventures of a geek volunteering at his kids' schools to promote geek-dom.\r\n\r\nFor the last 3 terms I've been running a weekly session in all things geek, from Guido van Robot programming to Lego Mindstorm, circuit-glue to cyber-safety, rocketry to metallurgy.\r\n\r\nMy motivation is to inspire curiosity, the burning desire to know how things work (and how to make them work better), in short: geek-dom.\r\n\r\nMy talk is about how to do this in a minimal budget using not much more than remastered Linux DVDs, salt and LEDs.\r\n\r\nThe title is my challenge to the community: find yourself a classroom and spread the word!","Title":"OGPC - One Geek Per Classroom","URL":"http://lca2012.linux.org.au/schedule/10/view_talk","Event":87,"Start":"2012-01-18 10:30:00","Presenter_emails":"thomas.sprinkmeier@gmail.com","Presenters":"Thomas Sprinkmeier","Duration":"0:50:00","Id":147,"Room Name":"T101"}]